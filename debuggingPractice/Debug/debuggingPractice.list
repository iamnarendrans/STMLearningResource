
debuggingPractice.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000018c4  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000013c  08001984  08001984  00011984  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08001ac0  08001ac0  000200a4  2**0
                  CONTENTS
  4 .ARM          00000000  08001ac0  08001ac0  000200a4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08001ac0  08001ac0  000200a4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08001ac0  08001ac0  00011ac0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08001ac4  08001ac4  00011ac4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000000a4  20000000  08001ac8  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  200000a4  08001b6c  000200a4  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000210  08001b6c  00020210  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000200a4  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  000200cc  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000ac2  00000000  00000000  0002010f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000003de  00000000  00000000  00020bd1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000138  00000000  00000000  00020fb0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 000000d8  00000000  00000000  000210e8  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00002b82  00000000  00000000  000211c0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000015a4  00000000  00000000  00023d42  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000096f6  00000000  00000000  000252e6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  00000e68  00000000  00000000  0002e9dc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000070  00000000  00000000  0002f844  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200000a4 	.word	0x200000a4
 80000e0:	00000000 	.word	0x00000000
 80000e4:	0800196c 	.word	0x0800196c

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200000a8 	.word	0x200000a8
 8000104:	0800196c 	.word	0x0800196c

08000108 <__gnu_thumb1_case_shi>:
 8000108:	b403      	push	{r0, r1}
 800010a:	4671      	mov	r1, lr
 800010c:	0849      	lsrs	r1, r1, #1
 800010e:	0040      	lsls	r0, r0, #1
 8000110:	0049      	lsls	r1, r1, #1
 8000112:	5e09      	ldrsh	r1, [r1, r0]
 8000114:	0049      	lsls	r1, r1, #1
 8000116:	448e      	add	lr, r1
 8000118:	bc03      	pop	{r0, r1}
 800011a:	4770      	bx	lr

0800011c <__udivsi3>:
 800011c:	2200      	movs	r2, #0
 800011e:	0843      	lsrs	r3, r0, #1
 8000120:	428b      	cmp	r3, r1
 8000122:	d374      	bcc.n	800020e <__udivsi3+0xf2>
 8000124:	0903      	lsrs	r3, r0, #4
 8000126:	428b      	cmp	r3, r1
 8000128:	d35f      	bcc.n	80001ea <__udivsi3+0xce>
 800012a:	0a03      	lsrs	r3, r0, #8
 800012c:	428b      	cmp	r3, r1
 800012e:	d344      	bcc.n	80001ba <__udivsi3+0x9e>
 8000130:	0b03      	lsrs	r3, r0, #12
 8000132:	428b      	cmp	r3, r1
 8000134:	d328      	bcc.n	8000188 <__udivsi3+0x6c>
 8000136:	0c03      	lsrs	r3, r0, #16
 8000138:	428b      	cmp	r3, r1
 800013a:	d30d      	bcc.n	8000158 <__udivsi3+0x3c>
 800013c:	22ff      	movs	r2, #255	; 0xff
 800013e:	0209      	lsls	r1, r1, #8
 8000140:	ba12      	rev	r2, r2
 8000142:	0c03      	lsrs	r3, r0, #16
 8000144:	428b      	cmp	r3, r1
 8000146:	d302      	bcc.n	800014e <__udivsi3+0x32>
 8000148:	1212      	asrs	r2, r2, #8
 800014a:	0209      	lsls	r1, r1, #8
 800014c:	d065      	beq.n	800021a <__udivsi3+0xfe>
 800014e:	0b03      	lsrs	r3, r0, #12
 8000150:	428b      	cmp	r3, r1
 8000152:	d319      	bcc.n	8000188 <__udivsi3+0x6c>
 8000154:	e000      	b.n	8000158 <__udivsi3+0x3c>
 8000156:	0a09      	lsrs	r1, r1, #8
 8000158:	0bc3      	lsrs	r3, r0, #15
 800015a:	428b      	cmp	r3, r1
 800015c:	d301      	bcc.n	8000162 <__udivsi3+0x46>
 800015e:	03cb      	lsls	r3, r1, #15
 8000160:	1ac0      	subs	r0, r0, r3
 8000162:	4152      	adcs	r2, r2
 8000164:	0b83      	lsrs	r3, r0, #14
 8000166:	428b      	cmp	r3, r1
 8000168:	d301      	bcc.n	800016e <__udivsi3+0x52>
 800016a:	038b      	lsls	r3, r1, #14
 800016c:	1ac0      	subs	r0, r0, r3
 800016e:	4152      	adcs	r2, r2
 8000170:	0b43      	lsrs	r3, r0, #13
 8000172:	428b      	cmp	r3, r1
 8000174:	d301      	bcc.n	800017a <__udivsi3+0x5e>
 8000176:	034b      	lsls	r3, r1, #13
 8000178:	1ac0      	subs	r0, r0, r3
 800017a:	4152      	adcs	r2, r2
 800017c:	0b03      	lsrs	r3, r0, #12
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x6a>
 8000182:	030b      	lsls	r3, r1, #12
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0ac3      	lsrs	r3, r0, #11
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x76>
 800018e:	02cb      	lsls	r3, r1, #11
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0a83      	lsrs	r3, r0, #10
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x82>
 800019a:	028b      	lsls	r3, r1, #10
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0a43      	lsrs	r3, r0, #9
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x8e>
 80001a6:	024b      	lsls	r3, r1, #9
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0a03      	lsrs	r3, r0, #8
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x9a>
 80001b2:	020b      	lsls	r3, r1, #8
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	d2cd      	bcs.n	8000156 <__udivsi3+0x3a>
 80001ba:	09c3      	lsrs	r3, r0, #7
 80001bc:	428b      	cmp	r3, r1
 80001be:	d301      	bcc.n	80001c4 <__udivsi3+0xa8>
 80001c0:	01cb      	lsls	r3, r1, #7
 80001c2:	1ac0      	subs	r0, r0, r3
 80001c4:	4152      	adcs	r2, r2
 80001c6:	0983      	lsrs	r3, r0, #6
 80001c8:	428b      	cmp	r3, r1
 80001ca:	d301      	bcc.n	80001d0 <__udivsi3+0xb4>
 80001cc:	018b      	lsls	r3, r1, #6
 80001ce:	1ac0      	subs	r0, r0, r3
 80001d0:	4152      	adcs	r2, r2
 80001d2:	0943      	lsrs	r3, r0, #5
 80001d4:	428b      	cmp	r3, r1
 80001d6:	d301      	bcc.n	80001dc <__udivsi3+0xc0>
 80001d8:	014b      	lsls	r3, r1, #5
 80001da:	1ac0      	subs	r0, r0, r3
 80001dc:	4152      	adcs	r2, r2
 80001de:	0903      	lsrs	r3, r0, #4
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xcc>
 80001e4:	010b      	lsls	r3, r1, #4
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	08c3      	lsrs	r3, r0, #3
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xd8>
 80001f0:	00cb      	lsls	r3, r1, #3
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0883      	lsrs	r3, r0, #2
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xe4>
 80001fc:	008b      	lsls	r3, r1, #2
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0843      	lsrs	r3, r0, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xf0>
 8000208:	004b      	lsls	r3, r1, #1
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	1a41      	subs	r1, r0, r1
 8000210:	d200      	bcs.n	8000214 <__udivsi3+0xf8>
 8000212:	4601      	mov	r1, r0
 8000214:	4152      	adcs	r2, r2
 8000216:	4610      	mov	r0, r2
 8000218:	4770      	bx	lr
 800021a:	e7ff      	b.n	800021c <__udivsi3+0x100>
 800021c:	b501      	push	{r0, lr}
 800021e:	2000      	movs	r0, #0
 8000220:	f000 f8f0 	bl	8000404 <__aeabi_idiv0>
 8000224:	bd02      	pop	{r1, pc}
 8000226:	46c0      	nop			; (mov r8, r8)

08000228 <__aeabi_uidivmod>:
 8000228:	2900      	cmp	r1, #0
 800022a:	d0f7      	beq.n	800021c <__udivsi3+0x100>
 800022c:	e776      	b.n	800011c <__udivsi3>
 800022e:	4770      	bx	lr

08000230 <__divsi3>:
 8000230:	4603      	mov	r3, r0
 8000232:	430b      	orrs	r3, r1
 8000234:	d47f      	bmi.n	8000336 <__divsi3+0x106>
 8000236:	2200      	movs	r2, #0
 8000238:	0843      	lsrs	r3, r0, #1
 800023a:	428b      	cmp	r3, r1
 800023c:	d374      	bcc.n	8000328 <__divsi3+0xf8>
 800023e:	0903      	lsrs	r3, r0, #4
 8000240:	428b      	cmp	r3, r1
 8000242:	d35f      	bcc.n	8000304 <__divsi3+0xd4>
 8000244:	0a03      	lsrs	r3, r0, #8
 8000246:	428b      	cmp	r3, r1
 8000248:	d344      	bcc.n	80002d4 <__divsi3+0xa4>
 800024a:	0b03      	lsrs	r3, r0, #12
 800024c:	428b      	cmp	r3, r1
 800024e:	d328      	bcc.n	80002a2 <__divsi3+0x72>
 8000250:	0c03      	lsrs	r3, r0, #16
 8000252:	428b      	cmp	r3, r1
 8000254:	d30d      	bcc.n	8000272 <__divsi3+0x42>
 8000256:	22ff      	movs	r2, #255	; 0xff
 8000258:	0209      	lsls	r1, r1, #8
 800025a:	ba12      	rev	r2, r2
 800025c:	0c03      	lsrs	r3, r0, #16
 800025e:	428b      	cmp	r3, r1
 8000260:	d302      	bcc.n	8000268 <__divsi3+0x38>
 8000262:	1212      	asrs	r2, r2, #8
 8000264:	0209      	lsls	r1, r1, #8
 8000266:	d065      	beq.n	8000334 <__divsi3+0x104>
 8000268:	0b03      	lsrs	r3, r0, #12
 800026a:	428b      	cmp	r3, r1
 800026c:	d319      	bcc.n	80002a2 <__divsi3+0x72>
 800026e:	e000      	b.n	8000272 <__divsi3+0x42>
 8000270:	0a09      	lsrs	r1, r1, #8
 8000272:	0bc3      	lsrs	r3, r0, #15
 8000274:	428b      	cmp	r3, r1
 8000276:	d301      	bcc.n	800027c <__divsi3+0x4c>
 8000278:	03cb      	lsls	r3, r1, #15
 800027a:	1ac0      	subs	r0, r0, r3
 800027c:	4152      	adcs	r2, r2
 800027e:	0b83      	lsrs	r3, r0, #14
 8000280:	428b      	cmp	r3, r1
 8000282:	d301      	bcc.n	8000288 <__divsi3+0x58>
 8000284:	038b      	lsls	r3, r1, #14
 8000286:	1ac0      	subs	r0, r0, r3
 8000288:	4152      	adcs	r2, r2
 800028a:	0b43      	lsrs	r3, r0, #13
 800028c:	428b      	cmp	r3, r1
 800028e:	d301      	bcc.n	8000294 <__divsi3+0x64>
 8000290:	034b      	lsls	r3, r1, #13
 8000292:	1ac0      	subs	r0, r0, r3
 8000294:	4152      	adcs	r2, r2
 8000296:	0b03      	lsrs	r3, r0, #12
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x70>
 800029c:	030b      	lsls	r3, r1, #12
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0ac3      	lsrs	r3, r0, #11
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x7c>
 80002a8:	02cb      	lsls	r3, r1, #11
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0a83      	lsrs	r3, r0, #10
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x88>
 80002b4:	028b      	lsls	r3, r1, #10
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0a43      	lsrs	r3, r0, #9
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x94>
 80002c0:	024b      	lsls	r3, r1, #9
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0a03      	lsrs	r3, r0, #8
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0xa0>
 80002cc:	020b      	lsls	r3, r1, #8
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	d2cd      	bcs.n	8000270 <__divsi3+0x40>
 80002d4:	09c3      	lsrs	r3, r0, #7
 80002d6:	428b      	cmp	r3, r1
 80002d8:	d301      	bcc.n	80002de <__divsi3+0xae>
 80002da:	01cb      	lsls	r3, r1, #7
 80002dc:	1ac0      	subs	r0, r0, r3
 80002de:	4152      	adcs	r2, r2
 80002e0:	0983      	lsrs	r3, r0, #6
 80002e2:	428b      	cmp	r3, r1
 80002e4:	d301      	bcc.n	80002ea <__divsi3+0xba>
 80002e6:	018b      	lsls	r3, r1, #6
 80002e8:	1ac0      	subs	r0, r0, r3
 80002ea:	4152      	adcs	r2, r2
 80002ec:	0943      	lsrs	r3, r0, #5
 80002ee:	428b      	cmp	r3, r1
 80002f0:	d301      	bcc.n	80002f6 <__divsi3+0xc6>
 80002f2:	014b      	lsls	r3, r1, #5
 80002f4:	1ac0      	subs	r0, r0, r3
 80002f6:	4152      	adcs	r2, r2
 80002f8:	0903      	lsrs	r3, r0, #4
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xd2>
 80002fe:	010b      	lsls	r3, r1, #4
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	08c3      	lsrs	r3, r0, #3
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xde>
 800030a:	00cb      	lsls	r3, r1, #3
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0883      	lsrs	r3, r0, #2
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xea>
 8000316:	008b      	lsls	r3, r1, #2
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0843      	lsrs	r3, r0, #1
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xf6>
 8000322:	004b      	lsls	r3, r1, #1
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	1a41      	subs	r1, r0, r1
 800032a:	d200      	bcs.n	800032e <__divsi3+0xfe>
 800032c:	4601      	mov	r1, r0
 800032e:	4152      	adcs	r2, r2
 8000330:	4610      	mov	r0, r2
 8000332:	4770      	bx	lr
 8000334:	e05d      	b.n	80003f2 <__divsi3+0x1c2>
 8000336:	0fca      	lsrs	r2, r1, #31
 8000338:	d000      	beq.n	800033c <__divsi3+0x10c>
 800033a:	4249      	negs	r1, r1
 800033c:	1003      	asrs	r3, r0, #32
 800033e:	d300      	bcc.n	8000342 <__divsi3+0x112>
 8000340:	4240      	negs	r0, r0
 8000342:	4053      	eors	r3, r2
 8000344:	2200      	movs	r2, #0
 8000346:	469c      	mov	ip, r3
 8000348:	0903      	lsrs	r3, r0, #4
 800034a:	428b      	cmp	r3, r1
 800034c:	d32d      	bcc.n	80003aa <__divsi3+0x17a>
 800034e:	0a03      	lsrs	r3, r0, #8
 8000350:	428b      	cmp	r3, r1
 8000352:	d312      	bcc.n	800037a <__divsi3+0x14a>
 8000354:	22fc      	movs	r2, #252	; 0xfc
 8000356:	0189      	lsls	r1, r1, #6
 8000358:	ba12      	rev	r2, r2
 800035a:	0a03      	lsrs	r3, r0, #8
 800035c:	428b      	cmp	r3, r1
 800035e:	d30c      	bcc.n	800037a <__divsi3+0x14a>
 8000360:	0189      	lsls	r1, r1, #6
 8000362:	1192      	asrs	r2, r2, #6
 8000364:	428b      	cmp	r3, r1
 8000366:	d308      	bcc.n	800037a <__divsi3+0x14a>
 8000368:	0189      	lsls	r1, r1, #6
 800036a:	1192      	asrs	r2, r2, #6
 800036c:	428b      	cmp	r3, r1
 800036e:	d304      	bcc.n	800037a <__divsi3+0x14a>
 8000370:	0189      	lsls	r1, r1, #6
 8000372:	d03a      	beq.n	80003ea <__divsi3+0x1ba>
 8000374:	1192      	asrs	r2, r2, #6
 8000376:	e000      	b.n	800037a <__divsi3+0x14a>
 8000378:	0989      	lsrs	r1, r1, #6
 800037a:	09c3      	lsrs	r3, r0, #7
 800037c:	428b      	cmp	r3, r1
 800037e:	d301      	bcc.n	8000384 <__divsi3+0x154>
 8000380:	01cb      	lsls	r3, r1, #7
 8000382:	1ac0      	subs	r0, r0, r3
 8000384:	4152      	adcs	r2, r2
 8000386:	0983      	lsrs	r3, r0, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d301      	bcc.n	8000390 <__divsi3+0x160>
 800038c:	018b      	lsls	r3, r1, #6
 800038e:	1ac0      	subs	r0, r0, r3
 8000390:	4152      	adcs	r2, r2
 8000392:	0943      	lsrs	r3, r0, #5
 8000394:	428b      	cmp	r3, r1
 8000396:	d301      	bcc.n	800039c <__divsi3+0x16c>
 8000398:	014b      	lsls	r3, r1, #5
 800039a:	1ac0      	subs	r0, r0, r3
 800039c:	4152      	adcs	r2, r2
 800039e:	0903      	lsrs	r3, r0, #4
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x178>
 80003a4:	010b      	lsls	r3, r1, #4
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	08c3      	lsrs	r3, r0, #3
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x184>
 80003b0:	00cb      	lsls	r3, r1, #3
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0883      	lsrs	r3, r0, #2
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x190>
 80003bc:	008b      	lsls	r3, r1, #2
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	d2d9      	bcs.n	8000378 <__divsi3+0x148>
 80003c4:	0843      	lsrs	r3, r0, #1
 80003c6:	428b      	cmp	r3, r1
 80003c8:	d301      	bcc.n	80003ce <__divsi3+0x19e>
 80003ca:	004b      	lsls	r3, r1, #1
 80003cc:	1ac0      	subs	r0, r0, r3
 80003ce:	4152      	adcs	r2, r2
 80003d0:	1a41      	subs	r1, r0, r1
 80003d2:	d200      	bcs.n	80003d6 <__divsi3+0x1a6>
 80003d4:	4601      	mov	r1, r0
 80003d6:	4663      	mov	r3, ip
 80003d8:	4152      	adcs	r2, r2
 80003da:	105b      	asrs	r3, r3, #1
 80003dc:	4610      	mov	r0, r2
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x1b4>
 80003e0:	4240      	negs	r0, r0
 80003e2:	2b00      	cmp	r3, #0
 80003e4:	d500      	bpl.n	80003e8 <__divsi3+0x1b8>
 80003e6:	4249      	negs	r1, r1
 80003e8:	4770      	bx	lr
 80003ea:	4663      	mov	r3, ip
 80003ec:	105b      	asrs	r3, r3, #1
 80003ee:	d300      	bcc.n	80003f2 <__divsi3+0x1c2>
 80003f0:	4240      	negs	r0, r0
 80003f2:	b501      	push	{r0, lr}
 80003f4:	2000      	movs	r0, #0
 80003f6:	f000 f805 	bl	8000404 <__aeabi_idiv0>
 80003fa:	bd02      	pop	{r1, pc}

080003fc <__aeabi_idivmod>:
 80003fc:	2900      	cmp	r1, #0
 80003fe:	d0f8      	beq.n	80003f2 <__divsi3+0x1c2>
 8000400:	e716      	b.n	8000230 <__divsi3>
 8000402:	4770      	bx	lr

08000404 <__aeabi_idiv0>:
 8000404:	4770      	bx	lr
 8000406:	46c0      	nop			; (mov r8, r8)

08000408 <__aeabi_lmul>:
 8000408:	b5f0      	push	{r4, r5, r6, r7, lr}
 800040a:	46ce      	mov	lr, r9
 800040c:	4699      	mov	r9, r3
 800040e:	0c03      	lsrs	r3, r0, #16
 8000410:	469c      	mov	ip, r3
 8000412:	0413      	lsls	r3, r2, #16
 8000414:	4647      	mov	r7, r8
 8000416:	0c1b      	lsrs	r3, r3, #16
 8000418:	001d      	movs	r5, r3
 800041a:	000e      	movs	r6, r1
 800041c:	4661      	mov	r1, ip
 800041e:	0404      	lsls	r4, r0, #16
 8000420:	0c24      	lsrs	r4, r4, #16
 8000422:	b580      	push	{r7, lr}
 8000424:	0007      	movs	r7, r0
 8000426:	0c10      	lsrs	r0, r2, #16
 8000428:	434b      	muls	r3, r1
 800042a:	4365      	muls	r5, r4
 800042c:	4341      	muls	r1, r0
 800042e:	4360      	muls	r0, r4
 8000430:	0c2c      	lsrs	r4, r5, #16
 8000432:	18c0      	adds	r0, r0, r3
 8000434:	1820      	adds	r0, r4, r0
 8000436:	468c      	mov	ip, r1
 8000438:	4283      	cmp	r3, r0
 800043a:	d903      	bls.n	8000444 <__aeabi_lmul+0x3c>
 800043c:	2380      	movs	r3, #128	; 0x80
 800043e:	025b      	lsls	r3, r3, #9
 8000440:	4698      	mov	r8, r3
 8000442:	44c4      	add	ip, r8
 8000444:	4649      	mov	r1, r9
 8000446:	4379      	muls	r1, r7
 8000448:	4356      	muls	r6, r2
 800044a:	0c03      	lsrs	r3, r0, #16
 800044c:	042d      	lsls	r5, r5, #16
 800044e:	0c2d      	lsrs	r5, r5, #16
 8000450:	1989      	adds	r1, r1, r6
 8000452:	4463      	add	r3, ip
 8000454:	0400      	lsls	r0, r0, #16
 8000456:	1940      	adds	r0, r0, r5
 8000458:	18c9      	adds	r1, r1, r3
 800045a:	bcc0      	pop	{r6, r7}
 800045c:	46b9      	mov	r9, r7
 800045e:	46b0      	mov	r8, r6
 8000460:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000462:	46c0      	nop			; (mov r8, r8)

08000464 <array_fill_numbers>:
int numbers[] = { 456,345,678,567,890,456,3456,123,765,456,896,456,678,987,000,145,90};

int  someData = 90;

void array_fill_numbers(int pNumbers[], unsigned int len)
{
 8000464:	b590      	push	{r4, r7, lr}
 8000466:	b085      	sub	sp, #20
 8000468:	af00      	add	r7, sp, #0
 800046a:	6078      	str	r0, [r7, #4]
 800046c:	6039      	str	r1, [r7, #0]

    for ( unsigned int i = 0 ; i < len ; i++)
 800046e:	2300      	movs	r3, #0
 8000470:	60fb      	str	r3, [r7, #12]
 8000472:	e00e      	b.n	8000492 <array_fill_numbers+0x2e>
    {
        pNumbers[i] = rand() % 1000;
 8000474:	f000 fa0a 	bl	800088c <rand>
 8000478:	68fb      	ldr	r3, [r7, #12]
 800047a:	009b      	lsls	r3, r3, #2
 800047c:	687a      	ldr	r2, [r7, #4]
 800047e:	18d4      	adds	r4, r2, r3
 8000480:	23fa      	movs	r3, #250	; 0xfa
 8000482:	0099      	lsls	r1, r3, #2
 8000484:	f7ff ffba 	bl	80003fc <__aeabi_idivmod>
 8000488:	000b      	movs	r3, r1
 800048a:	6023      	str	r3, [r4, #0]
    for ( unsigned int i = 0 ; i < len ; i++)
 800048c:	68fb      	ldr	r3, [r7, #12]
 800048e:	3301      	adds	r3, #1
 8000490:	60fb      	str	r3, [r7, #12]
 8000492:	68fa      	ldr	r2, [r7, #12]
 8000494:	683b      	ldr	r3, [r7, #0]
 8000496:	429a      	cmp	r2, r3
 8000498:	d3ec      	bcc.n	8000474 <array_fill_numbers+0x10>
    }

}
 800049a:	46c0      	nop			; (mov r8, r8)
 800049c:	46c0      	nop			; (mov r8, r8)
 800049e:	46bd      	mov	sp, r7
 80004a0:	b005      	add	sp, #20
 80004a2:	bd90      	pop	{r4, r7, pc}

080004a4 <display_numbers>:

void display_numbers(int *pNumbers, unsigned int len, char *pMessage)
{
 80004a4:	b580      	push	{r7, lr}
 80004a6:	b086      	sub	sp, #24
 80004a8:	af00      	add	r7, sp, #0
 80004aa:	60f8      	str	r0, [r7, #12]
 80004ac:	60b9      	str	r1, [r7, #8]
 80004ae:	607a      	str	r2, [r7, #4]
    printf("%s",pMessage);
 80004b0:	687a      	ldr	r2, [r7, #4]
 80004b2:	4b10      	ldr	r3, [pc, #64]	; (80004f4 <display_numbers+0x50>)
 80004b4:	0011      	movs	r1, r2
 80004b6:	0018      	movs	r0, r3
 80004b8:	f000 faea 	bl	8000a90 <iprintf>

    for (unsigned i = 0 ; i < len ; i++)
 80004bc:	2300      	movs	r3, #0
 80004be:	617b      	str	r3, [r7, #20]
 80004c0:	e00c      	b.n	80004dc <display_numbers+0x38>
    {
        printf("%5d  ",pNumbers[i]);
 80004c2:	697b      	ldr	r3, [r7, #20]
 80004c4:	009b      	lsls	r3, r3, #2
 80004c6:	68fa      	ldr	r2, [r7, #12]
 80004c8:	18d3      	adds	r3, r2, r3
 80004ca:	681a      	ldr	r2, [r3, #0]
 80004cc:	4b0a      	ldr	r3, [pc, #40]	; (80004f8 <display_numbers+0x54>)
 80004ce:	0011      	movs	r1, r2
 80004d0:	0018      	movs	r0, r3
 80004d2:	f000 fadd 	bl	8000a90 <iprintf>
    for (unsigned i = 0 ; i < len ; i++)
 80004d6:	697b      	ldr	r3, [r7, #20]
 80004d8:	3301      	adds	r3, #1
 80004da:	617b      	str	r3, [r7, #20]
 80004dc:	697a      	ldr	r2, [r7, #20]
 80004de:	68bb      	ldr	r3, [r7, #8]
 80004e0:	429a      	cmp	r2, r3
 80004e2:	d3ee      	bcc.n	80004c2 <display_numbers+0x1e>
    }

    printf("\n");
 80004e4:	200a      	movs	r0, #10
 80004e6:	f000 fae3 	bl	8000ab0 <putchar>
}
 80004ea:	46c0      	nop			; (mov r8, r8)
 80004ec:	46bd      	mov	sp, r7
 80004ee:	b006      	add	sp, #24
 80004f0:	bd80      	pop	{r7, pc}
 80004f2:	46c0      	nop			; (mov r8, r8)
 80004f4:	08001984 	.word	0x08001984
 80004f8:	08001988 	.word	0x08001988

080004fc <swap_numbers>:


void swap_numbers(int *x,int *y)
{
 80004fc:	b580      	push	{r7, lr}
 80004fe:	b084      	sub	sp, #16
 8000500:	af00      	add	r7, sp, #0
 8000502:	6078      	str	r0, [r7, #4]
 8000504:	6039      	str	r1, [r7, #0]
     int temp=*x;
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	60fb      	str	r3, [r7, #12]
     *x=*y;
 800050c:	683b      	ldr	r3, [r7, #0]
 800050e:	681a      	ldr	r2, [r3, #0]
 8000510:	687b      	ldr	r3, [r7, #4]
 8000512:	601a      	str	r2, [r3, #0]
     *y=temp;
 8000514:	683b      	ldr	r3, [r7, #0]
 8000516:	68fa      	ldr	r2, [r7, #12]
 8000518:	601a      	str	r2, [r3, #0]
     void (*jump_addr) (void);
     jump_addr = (void*)0x20000008;
     jump_addr();
#endif

     someData = 10;
 800051a:	4b03      	ldr	r3, [pc, #12]	; (8000528 <swap_numbers+0x2c>)
 800051c:	220a      	movs	r2, #10
 800051e:	601a      	str	r2, [r3, #0]
}
 8000520:	46c0      	nop			; (mov r8, r8)
 8000522:	46bd      	mov	sp, r7
 8000524:	b004      	add	sp, #16
 8000526:	bd80      	pop	{r7, pc}
 8000528:	20000044 	.word	0x20000044

0800052c <bubble_sort>:


void bubble_sort(int *pNumbers , unsigned int len)
{
 800052c:	b580      	push	{r7, lr}
 800052e:	b086      	sub	sp, #24
 8000530:	af00      	add	r7, sp, #0
 8000532:	6078      	str	r0, [r7, #4]
 8000534:	6039      	str	r1, [r7, #0]

    int i,j,flag=0;
 8000536:	2300      	movs	r3, #0
 8000538:	60fb      	str	r3, [r7, #12]

    for(i=0;i<len-1;i++)
 800053a:	2300      	movs	r3, #0
 800053c:	617b      	str	r3, [r7, #20]
 800053e:	e02f      	b.n	80005a0 <bubble_sort+0x74>
    {
        flag=0;
 8000540:	2300      	movs	r3, #0
 8000542:	60fb      	str	r3, [r7, #12]

        for(j=0;j<len-1-i;j++)
 8000544:	2300      	movs	r3, #0
 8000546:	613b      	str	r3, [r7, #16]
 8000548:	e01d      	b.n	8000586 <bubble_sort+0x5a>
        {
            if(pNumbers[j] > pNumbers[j+1])
 800054a:	693b      	ldr	r3, [r7, #16]
 800054c:	009b      	lsls	r3, r3, #2
 800054e:	687a      	ldr	r2, [r7, #4]
 8000550:	18d3      	adds	r3, r2, r3
 8000552:	681a      	ldr	r2, [r3, #0]
 8000554:	693b      	ldr	r3, [r7, #16]
 8000556:	3301      	adds	r3, #1
 8000558:	009b      	lsls	r3, r3, #2
 800055a:	6879      	ldr	r1, [r7, #4]
 800055c:	18cb      	adds	r3, r1, r3
 800055e:	681b      	ldr	r3, [r3, #0]
 8000560:	429a      	cmp	r2, r3
 8000562:	dd0d      	ble.n	8000580 <bubble_sort+0x54>
            {
                swap_numbers(&pNumbers[j],&pNumbers[j+1]);
 8000564:	693b      	ldr	r3, [r7, #16]
 8000566:	009b      	lsls	r3, r3, #2
 8000568:	687a      	ldr	r2, [r7, #4]
 800056a:	18d0      	adds	r0, r2, r3
 800056c:	693b      	ldr	r3, [r7, #16]
 800056e:	3301      	adds	r3, #1
 8000570:	009b      	lsls	r3, r3, #2
 8000572:	687a      	ldr	r2, [r7, #4]
 8000574:	18d3      	adds	r3, r2, r3
 8000576:	0019      	movs	r1, r3
 8000578:	f7ff ffc0 	bl	80004fc <swap_numbers>
                flag=1;
 800057c:	2301      	movs	r3, #1
 800057e:	60fb      	str	r3, [r7, #12]
        for(j=0;j<len-1-i;j++)
 8000580:	693b      	ldr	r3, [r7, #16]
 8000582:	3301      	adds	r3, #1
 8000584:	613b      	str	r3, [r7, #16]
 8000586:	697b      	ldr	r3, [r7, #20]
 8000588:	683a      	ldr	r2, [r7, #0]
 800058a:	1ad3      	subs	r3, r2, r3
 800058c:	1e5a      	subs	r2, r3, #1
 800058e:	693b      	ldr	r3, [r7, #16]
 8000590:	429a      	cmp	r2, r3
 8000592:	d8da      	bhi.n	800054a <bubble_sort+0x1e>
            }
        }

        if(flag==0)
 8000594:	68fb      	ldr	r3, [r7, #12]
 8000596:	2b00      	cmp	r3, #0
 8000598:	d008      	beq.n	80005ac <bubble_sort+0x80>
    for(i=0;i<len-1;i++)
 800059a:	697b      	ldr	r3, [r7, #20]
 800059c:	3301      	adds	r3, #1
 800059e:	617b      	str	r3, [r7, #20]
 80005a0:	683b      	ldr	r3, [r7, #0]
 80005a2:	1e5a      	subs	r2, r3, #1
 80005a4:	697b      	ldr	r3, [r7, #20]
 80005a6:	429a      	cmp	r2, r3
 80005a8:	d8ca      	bhi.n	8000540 <bubble_sort+0x14>
            break;
    }
}
 80005aa:	e000      	b.n	80005ae <bubble_sort+0x82>
            break;
 80005ac:	46c0      	nop			; (mov r8, r8)
}
 80005ae:	46c0      	nop			; (mov r8, r8)
 80005b0:	46bd      	mov	sp, r7
 80005b2:	b006      	add	sp, #24
 80005b4:	bd80      	pop	{r7, pc}

080005b6 <insertion_sort>:

void insertion_sort(int *pNumbers , unsigned int len)
{
 80005b6:	b580      	push	{r7, lr}
 80005b8:	b086      	sub	sp, #24
 80005ba:	af00      	add	r7, sp, #0
 80005bc:	6078      	str	r0, [r7, #4]
 80005be:	6039      	str	r1, [r7, #0]

     int i,j,num;

     for(i=1 ; i<len ; i++)
 80005c0:	2301      	movs	r3, #1
 80005c2:	617b      	str	r3, [r7, #20]
 80005c4:	e02c      	b.n	8000620 <insertion_sort+0x6a>
     {
         j=i-1;
 80005c6:	697b      	ldr	r3, [r7, #20]
 80005c8:	3b01      	subs	r3, #1
 80005ca:	613b      	str	r3, [r7, #16]

         num = pNumbers[i];
 80005cc:	697b      	ldr	r3, [r7, #20]
 80005ce:	009b      	lsls	r3, r3, #2
 80005d0:	687a      	ldr	r2, [r7, #4]
 80005d2:	18d3      	adds	r3, r2, r3
 80005d4:	681b      	ldr	r3, [r3, #0]
 80005d6:	60fb      	str	r3, [r7, #12]

         while( (j>-1) && (pNumbers[j] > num) )
 80005d8:	e00d      	b.n	80005f6 <insertion_sort+0x40>
         {
             pNumbers[j+1] = pNumbers[j];
 80005da:	693b      	ldr	r3, [r7, #16]
 80005dc:	009b      	lsls	r3, r3, #2
 80005de:	687a      	ldr	r2, [r7, #4]
 80005e0:	18d2      	adds	r2, r2, r3
 80005e2:	693b      	ldr	r3, [r7, #16]
 80005e4:	3301      	adds	r3, #1
 80005e6:	009b      	lsls	r3, r3, #2
 80005e8:	6879      	ldr	r1, [r7, #4]
 80005ea:	18cb      	adds	r3, r1, r3
 80005ec:	6812      	ldr	r2, [r2, #0]
 80005ee:	601a      	str	r2, [r3, #0]
             j--;
 80005f0:	693b      	ldr	r3, [r7, #16]
 80005f2:	3b01      	subs	r3, #1
 80005f4:	613b      	str	r3, [r7, #16]
         while( (j>-1) && (pNumbers[j] > num) )
 80005f6:	693b      	ldr	r3, [r7, #16]
 80005f8:	2b00      	cmp	r3, #0
 80005fa:	db07      	blt.n	800060c <insertion_sort+0x56>
 80005fc:	693b      	ldr	r3, [r7, #16]
 80005fe:	009b      	lsls	r3, r3, #2
 8000600:	687a      	ldr	r2, [r7, #4]
 8000602:	18d3      	adds	r3, r2, r3
 8000604:	681b      	ldr	r3, [r3, #0]
 8000606:	68fa      	ldr	r2, [r7, #12]
 8000608:	429a      	cmp	r2, r3
 800060a:	dbe6      	blt.n	80005da <insertion_sort+0x24>
         }

         pNumbers[j+1]=num;
 800060c:	693b      	ldr	r3, [r7, #16]
 800060e:	3301      	adds	r3, #1
 8000610:	009b      	lsls	r3, r3, #2
 8000612:	687a      	ldr	r2, [r7, #4]
 8000614:	18d3      	adds	r3, r2, r3
 8000616:	68fa      	ldr	r2, [r7, #12]
 8000618:	601a      	str	r2, [r3, #0]
     for(i=1 ; i<len ; i++)
 800061a:	697b      	ldr	r3, [r7, #20]
 800061c:	3301      	adds	r3, #1
 800061e:	617b      	str	r3, [r7, #20]
 8000620:	697b      	ldr	r3, [r7, #20]
 8000622:	683a      	ldr	r2, [r7, #0]
 8000624:	429a      	cmp	r2, r3
 8000626:	d8ce      	bhi.n	80005c6 <insertion_sort+0x10>
     }


}
 8000628:	46c0      	nop			; (mov r8, r8)
 800062a:	46c0      	nop			; (mov r8, r8)
 800062c:	46bd      	mov	sp, r7
 800062e:	b006      	add	sp, #24
 8000630:	bd80      	pop	{r7, pc}
	...

08000634 <main>:



int main()
{
 8000634:	b580      	push	{r7, lr}
 8000636:	b082      	sub	sp, #8
 8000638:	af00      	add	r7, sp, #0

    unsigned int len = sizeof(numbers)/sizeof(int);
 800063a:	2311      	movs	r3, #17
 800063c:	607b      	str	r3, [r7, #4]

    array_fill_numbers(numbers,len);
 800063e:	687a      	ldr	r2, [r7, #4]
 8000640:	4b19      	ldr	r3, [pc, #100]	; (80006a8 <main+0x74>)
 8000642:	0011      	movs	r1, r2
 8000644:	0018      	movs	r0, r3
 8000646:	f7ff ff0d 	bl	8000464 <array_fill_numbers>

    display_numbers(numbers,len,"B-unsorted array :");
 800064a:	4a18      	ldr	r2, [pc, #96]	; (80006ac <main+0x78>)
 800064c:	6879      	ldr	r1, [r7, #4]
 800064e:	4b16      	ldr	r3, [pc, #88]	; (80006a8 <main+0x74>)
 8000650:	0018      	movs	r0, r3
 8000652:	f7ff ff27 	bl	80004a4 <display_numbers>

    bubble_sort(numbers,len);
 8000656:	687a      	ldr	r2, [r7, #4]
 8000658:	4b13      	ldr	r3, [pc, #76]	; (80006a8 <main+0x74>)
 800065a:	0011      	movs	r1, r2
 800065c:	0018      	movs	r0, r3
 800065e:	f7ff ff65 	bl	800052c <bubble_sort>

    display_numbers(numbers,len,"B-sorted array   :");
 8000662:	4a13      	ldr	r2, [pc, #76]	; (80006b0 <main+0x7c>)
 8000664:	6879      	ldr	r1, [r7, #4]
 8000666:	4b10      	ldr	r3, [pc, #64]	; (80006a8 <main+0x74>)
 8000668:	0018      	movs	r0, r3
 800066a:	f7ff ff1b 	bl	80004a4 <display_numbers>

    array_fill_numbers(numbers,len);
 800066e:	687a      	ldr	r2, [r7, #4]
 8000670:	4b0d      	ldr	r3, [pc, #52]	; (80006a8 <main+0x74>)
 8000672:	0011      	movs	r1, r2
 8000674:	0018      	movs	r0, r3
 8000676:	f7ff fef5 	bl	8000464 <array_fill_numbers>

    display_numbers(numbers,len,"I-unsorted array :");
 800067a:	4a0e      	ldr	r2, [pc, #56]	; (80006b4 <main+0x80>)
 800067c:	6879      	ldr	r1, [r7, #4]
 800067e:	4b0a      	ldr	r3, [pc, #40]	; (80006a8 <main+0x74>)
 8000680:	0018      	movs	r0, r3
 8000682:	f7ff ff0f 	bl	80004a4 <display_numbers>

    insertion_sort(numbers,len);
 8000686:	687a      	ldr	r2, [r7, #4]
 8000688:	4b07      	ldr	r3, [pc, #28]	; (80006a8 <main+0x74>)
 800068a:	0011      	movs	r1, r2
 800068c:	0018      	movs	r0, r3
 800068e:	f7ff ff92 	bl	80005b6 <insertion_sort>

    display_numbers(numbers,len,"I-sorted array   :");
 8000692:	4a09      	ldr	r2, [pc, #36]	; (80006b8 <main+0x84>)
 8000694:	6879      	ldr	r1, [r7, #4]
 8000696:	4b04      	ldr	r3, [pc, #16]	; (80006a8 <main+0x74>)
 8000698:	0018      	movs	r0, r3
 800069a:	f7ff ff03 	bl	80004a4 <display_numbers>



    return 0;
 800069e:	2300      	movs	r3, #0
}
 80006a0:	0018      	movs	r0, r3
 80006a2:	46bd      	mov	sp, r7
 80006a4:	b002      	add	sp, #8
 80006a6:	bd80      	pop	{r7, pc}
 80006a8:	20000000 	.word	0x20000000
 80006ac:	08001990 	.word	0x08001990
 80006b0:	080019a4 	.word	0x080019a4
 80006b4:	080019b8 	.word	0x080019b8
 80006b8:	080019cc 	.word	0x080019cc

080006bc <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 80006bc:	b580      	push	{r7, lr}
 80006be:	af00      	add	r7, sp, #0
  return 1;
 80006c0:	2301      	movs	r3, #1
}
 80006c2:	0018      	movs	r0, r3
 80006c4:	46bd      	mov	sp, r7
 80006c6:	bd80      	pop	{r7, pc}

080006c8 <_kill>:

int _kill(int pid, int sig)
{
 80006c8:	b580      	push	{r7, lr}
 80006ca:	b082      	sub	sp, #8
 80006cc:	af00      	add	r7, sp, #0
 80006ce:	6078      	str	r0, [r7, #4]
 80006d0:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80006d2:	f000 fa99 	bl	8000c08 <__errno>
 80006d6:	0003      	movs	r3, r0
 80006d8:	2216      	movs	r2, #22
 80006da:	601a      	str	r2, [r3, #0]
  return -1;
 80006dc:	2301      	movs	r3, #1
 80006de:	425b      	negs	r3, r3
}
 80006e0:	0018      	movs	r0, r3
 80006e2:	46bd      	mov	sp, r7
 80006e4:	b002      	add	sp, #8
 80006e6:	bd80      	pop	{r7, pc}

080006e8 <_exit>:

void _exit (int status)
{
 80006e8:	b580      	push	{r7, lr}
 80006ea:	b082      	sub	sp, #8
 80006ec:	af00      	add	r7, sp, #0
 80006ee:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80006f0:	2301      	movs	r3, #1
 80006f2:	425a      	negs	r2, r3
 80006f4:	687b      	ldr	r3, [r7, #4]
 80006f6:	0011      	movs	r1, r2
 80006f8:	0018      	movs	r0, r3
 80006fa:	f7ff ffe5 	bl	80006c8 <_kill>
  while (1) {}    /* Make sure we hang here */
 80006fe:	e7fe      	b.n	80006fe <_exit+0x16>

08000700 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000700:	b580      	push	{r7, lr}
 8000702:	b086      	sub	sp, #24
 8000704:	af00      	add	r7, sp, #0
 8000706:	60f8      	str	r0, [r7, #12]
 8000708:	60b9      	str	r1, [r7, #8]
 800070a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800070c:	2300      	movs	r3, #0
 800070e:	617b      	str	r3, [r7, #20]
 8000710:	e00a      	b.n	8000728 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000712:	e000      	b.n	8000716 <_read+0x16>
 8000714:	bf00      	nop
 8000716:	0001      	movs	r1, r0
 8000718:	68bb      	ldr	r3, [r7, #8]
 800071a:	1c5a      	adds	r2, r3, #1
 800071c:	60ba      	str	r2, [r7, #8]
 800071e:	b2ca      	uxtb	r2, r1
 8000720:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000722:	697b      	ldr	r3, [r7, #20]
 8000724:	3301      	adds	r3, #1
 8000726:	617b      	str	r3, [r7, #20]
 8000728:	697a      	ldr	r2, [r7, #20]
 800072a:	687b      	ldr	r3, [r7, #4]
 800072c:	429a      	cmp	r2, r3
 800072e:	dbf0      	blt.n	8000712 <_read+0x12>
  }

  return len;
 8000730:	687b      	ldr	r3, [r7, #4]
}
 8000732:	0018      	movs	r0, r3
 8000734:	46bd      	mov	sp, r7
 8000736:	b006      	add	sp, #24
 8000738:	bd80      	pop	{r7, pc}

0800073a <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800073a:	b580      	push	{r7, lr}
 800073c:	b086      	sub	sp, #24
 800073e:	af00      	add	r7, sp, #0
 8000740:	60f8      	str	r0, [r7, #12]
 8000742:	60b9      	str	r1, [r7, #8]
 8000744:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000746:	2300      	movs	r3, #0
 8000748:	617b      	str	r3, [r7, #20]
 800074a:	e009      	b.n	8000760 <_write+0x26>
  {
    __io_putchar(*ptr++);
 800074c:	68bb      	ldr	r3, [r7, #8]
 800074e:	1c5a      	adds	r2, r3, #1
 8000750:	60ba      	str	r2, [r7, #8]
 8000752:	781b      	ldrb	r3, [r3, #0]
 8000754:	0018      	movs	r0, r3
 8000756:	e000      	b.n	800075a <_write+0x20>
 8000758:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800075a:	697b      	ldr	r3, [r7, #20]
 800075c:	3301      	adds	r3, #1
 800075e:	617b      	str	r3, [r7, #20]
 8000760:	697a      	ldr	r2, [r7, #20]
 8000762:	687b      	ldr	r3, [r7, #4]
 8000764:	429a      	cmp	r2, r3
 8000766:	dbf1      	blt.n	800074c <_write+0x12>
  }
  return len;
 8000768:	687b      	ldr	r3, [r7, #4]
}
 800076a:	0018      	movs	r0, r3
 800076c:	46bd      	mov	sp, r7
 800076e:	b006      	add	sp, #24
 8000770:	bd80      	pop	{r7, pc}

08000772 <_close>:

int _close(int file)
{
 8000772:	b580      	push	{r7, lr}
 8000774:	b082      	sub	sp, #8
 8000776:	af00      	add	r7, sp, #0
 8000778:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800077a:	2301      	movs	r3, #1
 800077c:	425b      	negs	r3, r3
}
 800077e:	0018      	movs	r0, r3
 8000780:	46bd      	mov	sp, r7
 8000782:	b002      	add	sp, #8
 8000784:	bd80      	pop	{r7, pc}

08000786 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000786:	b580      	push	{r7, lr}
 8000788:	b082      	sub	sp, #8
 800078a:	af00      	add	r7, sp, #0
 800078c:	6078      	str	r0, [r7, #4]
 800078e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8000790:	683b      	ldr	r3, [r7, #0]
 8000792:	2280      	movs	r2, #128	; 0x80
 8000794:	0192      	lsls	r2, r2, #6
 8000796:	605a      	str	r2, [r3, #4]
  return 0;
 8000798:	2300      	movs	r3, #0
}
 800079a:	0018      	movs	r0, r3
 800079c:	46bd      	mov	sp, r7
 800079e:	b002      	add	sp, #8
 80007a0:	bd80      	pop	{r7, pc}

080007a2 <_isatty>:

int _isatty(int file)
{
 80007a2:	b580      	push	{r7, lr}
 80007a4:	b082      	sub	sp, #8
 80007a6:	af00      	add	r7, sp, #0
 80007a8:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 80007aa:	2301      	movs	r3, #1
}
 80007ac:	0018      	movs	r0, r3
 80007ae:	46bd      	mov	sp, r7
 80007b0:	b002      	add	sp, #8
 80007b2:	bd80      	pop	{r7, pc}

080007b4 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 80007b4:	b580      	push	{r7, lr}
 80007b6:	b084      	sub	sp, #16
 80007b8:	af00      	add	r7, sp, #0
 80007ba:	60f8      	str	r0, [r7, #12]
 80007bc:	60b9      	str	r1, [r7, #8]
 80007be:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80007c0:	2300      	movs	r3, #0
}
 80007c2:	0018      	movs	r0, r3
 80007c4:	46bd      	mov	sp, r7
 80007c6:	b004      	add	sp, #16
 80007c8:	bd80      	pop	{r7, pc}
	...

080007cc <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80007cc:	b580      	push	{r7, lr}
 80007ce:	b086      	sub	sp, #24
 80007d0:	af00      	add	r7, sp, #0
 80007d2:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80007d4:	4a14      	ldr	r2, [pc, #80]	; (8000828 <_sbrk+0x5c>)
 80007d6:	4b15      	ldr	r3, [pc, #84]	; (800082c <_sbrk+0x60>)
 80007d8:	1ad3      	subs	r3, r2, r3
 80007da:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80007dc:	697b      	ldr	r3, [r7, #20]
 80007de:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80007e0:	4b13      	ldr	r3, [pc, #76]	; (8000830 <_sbrk+0x64>)
 80007e2:	681b      	ldr	r3, [r3, #0]
 80007e4:	2b00      	cmp	r3, #0
 80007e6:	d102      	bne.n	80007ee <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80007e8:	4b11      	ldr	r3, [pc, #68]	; (8000830 <_sbrk+0x64>)
 80007ea:	4a12      	ldr	r2, [pc, #72]	; (8000834 <_sbrk+0x68>)
 80007ec:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80007ee:	4b10      	ldr	r3, [pc, #64]	; (8000830 <_sbrk+0x64>)
 80007f0:	681a      	ldr	r2, [r3, #0]
 80007f2:	687b      	ldr	r3, [r7, #4]
 80007f4:	18d3      	adds	r3, r2, r3
 80007f6:	693a      	ldr	r2, [r7, #16]
 80007f8:	429a      	cmp	r2, r3
 80007fa:	d207      	bcs.n	800080c <_sbrk+0x40>
  {
    errno = ENOMEM;
 80007fc:	f000 fa04 	bl	8000c08 <__errno>
 8000800:	0003      	movs	r3, r0
 8000802:	220c      	movs	r2, #12
 8000804:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8000806:	2301      	movs	r3, #1
 8000808:	425b      	negs	r3, r3
 800080a:	e009      	b.n	8000820 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800080c:	4b08      	ldr	r3, [pc, #32]	; (8000830 <_sbrk+0x64>)
 800080e:	681b      	ldr	r3, [r3, #0]
 8000810:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8000812:	4b07      	ldr	r3, [pc, #28]	; (8000830 <_sbrk+0x64>)
 8000814:	681a      	ldr	r2, [r3, #0]
 8000816:	687b      	ldr	r3, [r7, #4]
 8000818:	18d2      	adds	r2, r2, r3
 800081a:	4b05      	ldr	r3, [pc, #20]	; (8000830 <_sbrk+0x64>)
 800081c:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 800081e:	68fb      	ldr	r3, [r7, #12]
}
 8000820:	0018      	movs	r0, r3
 8000822:	46bd      	mov	sp, r7
 8000824:	b006      	add	sp, #24
 8000826:	bd80      	pop	{r7, pc}
 8000828:	20004000 	.word	0x20004000
 800082c:	00000400 	.word	0x00000400
 8000830:	200000c0 	.word	0x200000c0
 8000834:	20000210 	.word	0x20000210

08000838 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000838:	480d      	ldr	r0, [pc, #52]	; (8000870 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800083a:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 800083c:	e000      	b.n	8000840 <Reset_Handler+0x8>
 800083e:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000840:	480c      	ldr	r0, [pc, #48]	; (8000874 <LoopForever+0x6>)
  ldr r1, =_edata
 8000842:	490d      	ldr	r1, [pc, #52]	; (8000878 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000844:	4a0d      	ldr	r2, [pc, #52]	; (800087c <LoopForever+0xe>)
  movs r3, #0
 8000846:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000848:	e002      	b.n	8000850 <LoopCopyDataInit>

0800084a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800084a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800084c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800084e:	3304      	adds	r3, #4

08000850 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000850:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000852:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000854:	d3f9      	bcc.n	800084a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000856:	4a0a      	ldr	r2, [pc, #40]	; (8000880 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000858:	4c0a      	ldr	r4, [pc, #40]	; (8000884 <LoopForever+0x16>)
  movs r3, #0
 800085a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800085c:	e001      	b.n	8000862 <LoopFillZerobss>

0800085e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800085e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000860:	3204      	adds	r2, #4

08000862 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000862:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000864:	d3fb      	bcc.n	800085e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000866:	f000 f9d5 	bl	8000c14 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800086a:	f7ff fee3 	bl	8000634 <main>

0800086e <LoopForever>:

LoopForever:
  b LoopForever
 800086e:	e7fe      	b.n	800086e <LoopForever>
  ldr   r0, =_estack
 8000870:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 8000874:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000878:	200000a4 	.word	0x200000a4
  ldr r2, =_sidata
 800087c:	08001ac8 	.word	0x08001ac8
  ldr r2, =_sbss
 8000880:	200000a4 	.word	0x200000a4
  ldr r4, =_ebss
 8000884:	20000210 	.word	0x20000210

08000888 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000888:	e7fe      	b.n	8000888 <ADC_IRQHandler>
	...

0800088c <rand>:
 800088c:	4b16      	ldr	r3, [pc, #88]	; (80008e8 <rand+0x5c>)
 800088e:	b510      	push	{r4, lr}
 8000890:	681c      	ldr	r4, [r3, #0]
 8000892:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8000894:	2b00      	cmp	r3, #0
 8000896:	d116      	bne.n	80008c6 <rand+0x3a>
 8000898:	2018      	movs	r0, #24
 800089a:	f000 fa4b 	bl	8000d34 <malloc>
 800089e:	1e02      	subs	r2, r0, #0
 80008a0:	6320      	str	r0, [r4, #48]	; 0x30
 80008a2:	d104      	bne.n	80008ae <rand+0x22>
 80008a4:	2152      	movs	r1, #82	; 0x52
 80008a6:	4b11      	ldr	r3, [pc, #68]	; (80008ec <rand+0x60>)
 80008a8:	4811      	ldr	r0, [pc, #68]	; (80008f0 <rand+0x64>)
 80008aa:	f000 f9db 	bl	8000c64 <__assert_func>
 80008ae:	4b11      	ldr	r3, [pc, #68]	; (80008f4 <rand+0x68>)
 80008b0:	2100      	movs	r1, #0
 80008b2:	6003      	str	r3, [r0, #0]
 80008b4:	4b10      	ldr	r3, [pc, #64]	; (80008f8 <rand+0x6c>)
 80008b6:	6043      	str	r3, [r0, #4]
 80008b8:	4b10      	ldr	r3, [pc, #64]	; (80008fc <rand+0x70>)
 80008ba:	6083      	str	r3, [r0, #8]
 80008bc:	230b      	movs	r3, #11
 80008be:	8183      	strh	r3, [r0, #12]
 80008c0:	2001      	movs	r0, #1
 80008c2:	6110      	str	r0, [r2, #16]
 80008c4:	6151      	str	r1, [r2, #20]
 80008c6:	6b24      	ldr	r4, [r4, #48]	; 0x30
 80008c8:	4a0d      	ldr	r2, [pc, #52]	; (8000900 <rand+0x74>)
 80008ca:	6920      	ldr	r0, [r4, #16]
 80008cc:	6961      	ldr	r1, [r4, #20]
 80008ce:	4b0d      	ldr	r3, [pc, #52]	; (8000904 <rand+0x78>)
 80008d0:	f7ff fd9a 	bl	8000408 <__aeabi_lmul>
 80008d4:	2201      	movs	r2, #1
 80008d6:	2300      	movs	r3, #0
 80008d8:	1880      	adds	r0, r0, r2
 80008da:	4159      	adcs	r1, r3
 80008dc:	6120      	str	r0, [r4, #16]
 80008de:	6161      	str	r1, [r4, #20]
 80008e0:	0048      	lsls	r0, r1, #1
 80008e2:	0840      	lsrs	r0, r0, #1
 80008e4:	bd10      	pop	{r4, pc}
 80008e6:	46c0      	nop			; (mov r8, r8)
 80008e8:	200000a0 	.word	0x200000a0
 80008ec:	080019df 	.word	0x080019df
 80008f0:	080019f6 	.word	0x080019f6
 80008f4:	abcd330e 	.word	0xabcd330e
 80008f8:	e66d1234 	.word	0xe66d1234
 80008fc:	0005deec 	.word	0x0005deec
 8000900:	4c957f2d 	.word	0x4c957f2d
 8000904:	5851f42d 	.word	0x5851f42d

08000908 <std>:
 8000908:	2300      	movs	r3, #0
 800090a:	b510      	push	{r4, lr}
 800090c:	0004      	movs	r4, r0
 800090e:	6003      	str	r3, [r0, #0]
 8000910:	6043      	str	r3, [r0, #4]
 8000912:	6083      	str	r3, [r0, #8]
 8000914:	8181      	strh	r1, [r0, #12]
 8000916:	6643      	str	r3, [r0, #100]	; 0x64
 8000918:	81c2      	strh	r2, [r0, #14]
 800091a:	6103      	str	r3, [r0, #16]
 800091c:	6143      	str	r3, [r0, #20]
 800091e:	6183      	str	r3, [r0, #24]
 8000920:	0019      	movs	r1, r3
 8000922:	2208      	movs	r2, #8
 8000924:	305c      	adds	r0, #92	; 0x5c
 8000926:	f000 f919 	bl	8000b5c <memset>
 800092a:	4b0b      	ldr	r3, [pc, #44]	; (8000958 <std+0x50>)
 800092c:	6224      	str	r4, [r4, #32]
 800092e:	6263      	str	r3, [r4, #36]	; 0x24
 8000930:	4b0a      	ldr	r3, [pc, #40]	; (800095c <std+0x54>)
 8000932:	62a3      	str	r3, [r4, #40]	; 0x28
 8000934:	4b0a      	ldr	r3, [pc, #40]	; (8000960 <std+0x58>)
 8000936:	62e3      	str	r3, [r4, #44]	; 0x2c
 8000938:	4b0a      	ldr	r3, [pc, #40]	; (8000964 <std+0x5c>)
 800093a:	6323      	str	r3, [r4, #48]	; 0x30
 800093c:	4b0a      	ldr	r3, [pc, #40]	; (8000968 <std+0x60>)
 800093e:	429c      	cmp	r4, r3
 8000940:	d005      	beq.n	800094e <std+0x46>
 8000942:	4b0a      	ldr	r3, [pc, #40]	; (800096c <std+0x64>)
 8000944:	429c      	cmp	r4, r3
 8000946:	d002      	beq.n	800094e <std+0x46>
 8000948:	4b09      	ldr	r3, [pc, #36]	; (8000970 <std+0x68>)
 800094a:	429c      	cmp	r4, r3
 800094c:	d103      	bne.n	8000956 <std+0x4e>
 800094e:	0020      	movs	r0, r4
 8000950:	3058      	adds	r0, #88	; 0x58
 8000952:	f000 f983 	bl	8000c5c <__retarget_lock_init_recursive>
 8000956:	bd10      	pop	{r4, pc}
 8000958:	08000ac5 	.word	0x08000ac5
 800095c:	08000aed 	.word	0x08000aed
 8000960:	08000b25 	.word	0x08000b25
 8000964:	08000b51 	.word	0x08000b51
 8000968:	200000c4 	.word	0x200000c4
 800096c:	2000012c 	.word	0x2000012c
 8000970:	20000194 	.word	0x20000194

08000974 <stdio_exit_handler>:
 8000974:	b510      	push	{r4, lr}
 8000976:	4a03      	ldr	r2, [pc, #12]	; (8000984 <stdio_exit_handler+0x10>)
 8000978:	4903      	ldr	r1, [pc, #12]	; (8000988 <stdio_exit_handler+0x14>)
 800097a:	4804      	ldr	r0, [pc, #16]	; (800098c <stdio_exit_handler+0x18>)
 800097c:	f000 f86c 	bl	8000a58 <_fwalk_sglue>
 8000980:	bd10      	pop	{r4, pc}
 8000982:	46c0      	nop			; (mov r8, r8)
 8000984:	20000048 	.word	0x20000048
 8000988:	0800154d 	.word	0x0800154d
 800098c:	20000054 	.word	0x20000054

08000990 <cleanup_stdio>:
 8000990:	6841      	ldr	r1, [r0, #4]
 8000992:	4b0b      	ldr	r3, [pc, #44]	; (80009c0 <cleanup_stdio+0x30>)
 8000994:	b510      	push	{r4, lr}
 8000996:	0004      	movs	r4, r0
 8000998:	4299      	cmp	r1, r3
 800099a:	d001      	beq.n	80009a0 <cleanup_stdio+0x10>
 800099c:	f000 fdd6 	bl	800154c <_fflush_r>
 80009a0:	68a1      	ldr	r1, [r4, #8]
 80009a2:	4b08      	ldr	r3, [pc, #32]	; (80009c4 <cleanup_stdio+0x34>)
 80009a4:	4299      	cmp	r1, r3
 80009a6:	d002      	beq.n	80009ae <cleanup_stdio+0x1e>
 80009a8:	0020      	movs	r0, r4
 80009aa:	f000 fdcf 	bl	800154c <_fflush_r>
 80009ae:	68e1      	ldr	r1, [r4, #12]
 80009b0:	4b05      	ldr	r3, [pc, #20]	; (80009c8 <cleanup_stdio+0x38>)
 80009b2:	4299      	cmp	r1, r3
 80009b4:	d002      	beq.n	80009bc <cleanup_stdio+0x2c>
 80009b6:	0020      	movs	r0, r4
 80009b8:	f000 fdc8 	bl	800154c <_fflush_r>
 80009bc:	bd10      	pop	{r4, pc}
 80009be:	46c0      	nop			; (mov r8, r8)
 80009c0:	200000c4 	.word	0x200000c4
 80009c4:	2000012c 	.word	0x2000012c
 80009c8:	20000194 	.word	0x20000194

080009cc <global_stdio_init.part.0>:
 80009cc:	b510      	push	{r4, lr}
 80009ce:	4b09      	ldr	r3, [pc, #36]	; (80009f4 <global_stdio_init.part.0+0x28>)
 80009d0:	4a09      	ldr	r2, [pc, #36]	; (80009f8 <global_stdio_init.part.0+0x2c>)
 80009d2:	2104      	movs	r1, #4
 80009d4:	601a      	str	r2, [r3, #0]
 80009d6:	4809      	ldr	r0, [pc, #36]	; (80009fc <global_stdio_init.part.0+0x30>)
 80009d8:	2200      	movs	r2, #0
 80009da:	f7ff ff95 	bl	8000908 <std>
 80009de:	2201      	movs	r2, #1
 80009e0:	2109      	movs	r1, #9
 80009e2:	4807      	ldr	r0, [pc, #28]	; (8000a00 <global_stdio_init.part.0+0x34>)
 80009e4:	f7ff ff90 	bl	8000908 <std>
 80009e8:	2202      	movs	r2, #2
 80009ea:	2112      	movs	r1, #18
 80009ec:	4805      	ldr	r0, [pc, #20]	; (8000a04 <global_stdio_init.part.0+0x38>)
 80009ee:	f7ff ff8b 	bl	8000908 <std>
 80009f2:	bd10      	pop	{r4, pc}
 80009f4:	200001fc 	.word	0x200001fc
 80009f8:	08000975 	.word	0x08000975
 80009fc:	200000c4 	.word	0x200000c4
 8000a00:	2000012c 	.word	0x2000012c
 8000a04:	20000194 	.word	0x20000194

08000a08 <__sfp_lock_acquire>:
 8000a08:	b510      	push	{r4, lr}
 8000a0a:	4802      	ldr	r0, [pc, #8]	; (8000a14 <__sfp_lock_acquire+0xc>)
 8000a0c:	f000 f927 	bl	8000c5e <__retarget_lock_acquire_recursive>
 8000a10:	bd10      	pop	{r4, pc}
 8000a12:	46c0      	nop			; (mov r8, r8)
 8000a14:	20000205 	.word	0x20000205

08000a18 <__sfp_lock_release>:
 8000a18:	b510      	push	{r4, lr}
 8000a1a:	4802      	ldr	r0, [pc, #8]	; (8000a24 <__sfp_lock_release+0xc>)
 8000a1c:	f000 f920 	bl	8000c60 <__retarget_lock_release_recursive>
 8000a20:	bd10      	pop	{r4, pc}
 8000a22:	46c0      	nop			; (mov r8, r8)
 8000a24:	20000205 	.word	0x20000205

08000a28 <__sinit>:
 8000a28:	b510      	push	{r4, lr}
 8000a2a:	0004      	movs	r4, r0
 8000a2c:	f7ff ffec 	bl	8000a08 <__sfp_lock_acquire>
 8000a30:	6a23      	ldr	r3, [r4, #32]
 8000a32:	2b00      	cmp	r3, #0
 8000a34:	d002      	beq.n	8000a3c <__sinit+0x14>
 8000a36:	f7ff ffef 	bl	8000a18 <__sfp_lock_release>
 8000a3a:	bd10      	pop	{r4, pc}
 8000a3c:	4b04      	ldr	r3, [pc, #16]	; (8000a50 <__sinit+0x28>)
 8000a3e:	6223      	str	r3, [r4, #32]
 8000a40:	4b04      	ldr	r3, [pc, #16]	; (8000a54 <__sinit+0x2c>)
 8000a42:	681b      	ldr	r3, [r3, #0]
 8000a44:	2b00      	cmp	r3, #0
 8000a46:	d1f6      	bne.n	8000a36 <__sinit+0xe>
 8000a48:	f7ff ffc0 	bl	80009cc <global_stdio_init.part.0>
 8000a4c:	e7f3      	b.n	8000a36 <__sinit+0xe>
 8000a4e:	46c0      	nop			; (mov r8, r8)
 8000a50:	08000991 	.word	0x08000991
 8000a54:	200001fc 	.word	0x200001fc

08000a58 <_fwalk_sglue>:
 8000a58:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000a5a:	0014      	movs	r4, r2
 8000a5c:	2600      	movs	r6, #0
 8000a5e:	9000      	str	r0, [sp, #0]
 8000a60:	9101      	str	r1, [sp, #4]
 8000a62:	68a5      	ldr	r5, [r4, #8]
 8000a64:	6867      	ldr	r7, [r4, #4]
 8000a66:	3f01      	subs	r7, #1
 8000a68:	d504      	bpl.n	8000a74 <_fwalk_sglue+0x1c>
 8000a6a:	6824      	ldr	r4, [r4, #0]
 8000a6c:	2c00      	cmp	r4, #0
 8000a6e:	d1f8      	bne.n	8000a62 <_fwalk_sglue+0xa>
 8000a70:	0030      	movs	r0, r6
 8000a72:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000a74:	89ab      	ldrh	r3, [r5, #12]
 8000a76:	2b01      	cmp	r3, #1
 8000a78:	d908      	bls.n	8000a8c <_fwalk_sglue+0x34>
 8000a7a:	220e      	movs	r2, #14
 8000a7c:	5eab      	ldrsh	r3, [r5, r2]
 8000a7e:	3301      	adds	r3, #1
 8000a80:	d004      	beq.n	8000a8c <_fwalk_sglue+0x34>
 8000a82:	0029      	movs	r1, r5
 8000a84:	9800      	ldr	r0, [sp, #0]
 8000a86:	9b01      	ldr	r3, [sp, #4]
 8000a88:	4798      	blx	r3
 8000a8a:	4306      	orrs	r6, r0
 8000a8c:	3568      	adds	r5, #104	; 0x68
 8000a8e:	e7ea      	b.n	8000a66 <_fwalk_sglue+0xe>

08000a90 <iprintf>:
 8000a90:	b40f      	push	{r0, r1, r2, r3}
 8000a92:	b507      	push	{r0, r1, r2, lr}
 8000a94:	4905      	ldr	r1, [pc, #20]	; (8000aac <iprintf+0x1c>)
 8000a96:	ab04      	add	r3, sp, #16
 8000a98:	6808      	ldr	r0, [r1, #0]
 8000a9a:	cb04      	ldmia	r3!, {r2}
 8000a9c:	6881      	ldr	r1, [r0, #8]
 8000a9e:	9301      	str	r3, [sp, #4]
 8000aa0:	f000 fa2e 	bl	8000f00 <_vfiprintf_r>
 8000aa4:	b003      	add	sp, #12
 8000aa6:	bc08      	pop	{r3}
 8000aa8:	b004      	add	sp, #16
 8000aaa:	4718      	bx	r3
 8000aac:	200000a0 	.word	0x200000a0

08000ab0 <putchar>:
 8000ab0:	b510      	push	{r4, lr}
 8000ab2:	4b03      	ldr	r3, [pc, #12]	; (8000ac0 <putchar+0x10>)
 8000ab4:	0001      	movs	r1, r0
 8000ab6:	6818      	ldr	r0, [r3, #0]
 8000ab8:	6882      	ldr	r2, [r0, #8]
 8000aba:	f000 fd83 	bl	80015c4 <_putc_r>
 8000abe:	bd10      	pop	{r4, pc}
 8000ac0:	200000a0 	.word	0x200000a0

08000ac4 <__sread>:
 8000ac4:	b570      	push	{r4, r5, r6, lr}
 8000ac6:	000c      	movs	r4, r1
 8000ac8:	250e      	movs	r5, #14
 8000aca:	5f49      	ldrsh	r1, [r1, r5]
 8000acc:	f000 f874 	bl	8000bb8 <_read_r>
 8000ad0:	2800      	cmp	r0, #0
 8000ad2:	db03      	blt.n	8000adc <__sread+0x18>
 8000ad4:	6d63      	ldr	r3, [r4, #84]	; 0x54
 8000ad6:	181b      	adds	r3, r3, r0
 8000ad8:	6563      	str	r3, [r4, #84]	; 0x54
 8000ada:	bd70      	pop	{r4, r5, r6, pc}
 8000adc:	89a3      	ldrh	r3, [r4, #12]
 8000ade:	4a02      	ldr	r2, [pc, #8]	; (8000ae8 <__sread+0x24>)
 8000ae0:	4013      	ands	r3, r2
 8000ae2:	81a3      	strh	r3, [r4, #12]
 8000ae4:	e7f9      	b.n	8000ada <__sread+0x16>
 8000ae6:	46c0      	nop			; (mov r8, r8)
 8000ae8:	ffffefff 	.word	0xffffefff

08000aec <__swrite>:
 8000aec:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000aee:	001f      	movs	r7, r3
 8000af0:	898b      	ldrh	r3, [r1, #12]
 8000af2:	0005      	movs	r5, r0
 8000af4:	000c      	movs	r4, r1
 8000af6:	0016      	movs	r6, r2
 8000af8:	05db      	lsls	r3, r3, #23
 8000afa:	d505      	bpl.n	8000b08 <__swrite+0x1c>
 8000afc:	230e      	movs	r3, #14
 8000afe:	5ec9      	ldrsh	r1, [r1, r3]
 8000b00:	2200      	movs	r2, #0
 8000b02:	2302      	movs	r3, #2
 8000b04:	f000 f844 	bl	8000b90 <_lseek_r>
 8000b08:	89a3      	ldrh	r3, [r4, #12]
 8000b0a:	4a05      	ldr	r2, [pc, #20]	; (8000b20 <__swrite+0x34>)
 8000b0c:	0028      	movs	r0, r5
 8000b0e:	4013      	ands	r3, r2
 8000b10:	81a3      	strh	r3, [r4, #12]
 8000b12:	0032      	movs	r2, r6
 8000b14:	230e      	movs	r3, #14
 8000b16:	5ee1      	ldrsh	r1, [r4, r3]
 8000b18:	003b      	movs	r3, r7
 8000b1a:	f000 f861 	bl	8000be0 <_write_r>
 8000b1e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000b20:	ffffefff 	.word	0xffffefff

08000b24 <__sseek>:
 8000b24:	b570      	push	{r4, r5, r6, lr}
 8000b26:	000c      	movs	r4, r1
 8000b28:	250e      	movs	r5, #14
 8000b2a:	5f49      	ldrsh	r1, [r1, r5]
 8000b2c:	f000 f830 	bl	8000b90 <_lseek_r>
 8000b30:	89a3      	ldrh	r3, [r4, #12]
 8000b32:	1c42      	adds	r2, r0, #1
 8000b34:	d103      	bne.n	8000b3e <__sseek+0x1a>
 8000b36:	4a05      	ldr	r2, [pc, #20]	; (8000b4c <__sseek+0x28>)
 8000b38:	4013      	ands	r3, r2
 8000b3a:	81a3      	strh	r3, [r4, #12]
 8000b3c:	bd70      	pop	{r4, r5, r6, pc}
 8000b3e:	2280      	movs	r2, #128	; 0x80
 8000b40:	0152      	lsls	r2, r2, #5
 8000b42:	4313      	orrs	r3, r2
 8000b44:	81a3      	strh	r3, [r4, #12]
 8000b46:	6560      	str	r0, [r4, #84]	; 0x54
 8000b48:	e7f8      	b.n	8000b3c <__sseek+0x18>
 8000b4a:	46c0      	nop			; (mov r8, r8)
 8000b4c:	ffffefff 	.word	0xffffefff

08000b50 <__sclose>:
 8000b50:	b510      	push	{r4, lr}
 8000b52:	230e      	movs	r3, #14
 8000b54:	5ec9      	ldrsh	r1, [r1, r3]
 8000b56:	f000 f809 	bl	8000b6c <_close_r>
 8000b5a:	bd10      	pop	{r4, pc}

08000b5c <memset>:
 8000b5c:	0003      	movs	r3, r0
 8000b5e:	1882      	adds	r2, r0, r2
 8000b60:	4293      	cmp	r3, r2
 8000b62:	d100      	bne.n	8000b66 <memset+0xa>
 8000b64:	4770      	bx	lr
 8000b66:	7019      	strb	r1, [r3, #0]
 8000b68:	3301      	adds	r3, #1
 8000b6a:	e7f9      	b.n	8000b60 <memset+0x4>

08000b6c <_close_r>:
 8000b6c:	2300      	movs	r3, #0
 8000b6e:	b570      	push	{r4, r5, r6, lr}
 8000b70:	4d06      	ldr	r5, [pc, #24]	; (8000b8c <_close_r+0x20>)
 8000b72:	0004      	movs	r4, r0
 8000b74:	0008      	movs	r0, r1
 8000b76:	602b      	str	r3, [r5, #0]
 8000b78:	f7ff fdfb 	bl	8000772 <_close>
 8000b7c:	1c43      	adds	r3, r0, #1
 8000b7e:	d103      	bne.n	8000b88 <_close_r+0x1c>
 8000b80:	682b      	ldr	r3, [r5, #0]
 8000b82:	2b00      	cmp	r3, #0
 8000b84:	d000      	beq.n	8000b88 <_close_r+0x1c>
 8000b86:	6023      	str	r3, [r4, #0]
 8000b88:	bd70      	pop	{r4, r5, r6, pc}
 8000b8a:	46c0      	nop			; (mov r8, r8)
 8000b8c:	20000200 	.word	0x20000200

08000b90 <_lseek_r>:
 8000b90:	b570      	push	{r4, r5, r6, lr}
 8000b92:	0004      	movs	r4, r0
 8000b94:	0008      	movs	r0, r1
 8000b96:	0011      	movs	r1, r2
 8000b98:	001a      	movs	r2, r3
 8000b9a:	2300      	movs	r3, #0
 8000b9c:	4d05      	ldr	r5, [pc, #20]	; (8000bb4 <_lseek_r+0x24>)
 8000b9e:	602b      	str	r3, [r5, #0]
 8000ba0:	f7ff fe08 	bl	80007b4 <_lseek>
 8000ba4:	1c43      	adds	r3, r0, #1
 8000ba6:	d103      	bne.n	8000bb0 <_lseek_r+0x20>
 8000ba8:	682b      	ldr	r3, [r5, #0]
 8000baa:	2b00      	cmp	r3, #0
 8000bac:	d000      	beq.n	8000bb0 <_lseek_r+0x20>
 8000bae:	6023      	str	r3, [r4, #0]
 8000bb0:	bd70      	pop	{r4, r5, r6, pc}
 8000bb2:	46c0      	nop			; (mov r8, r8)
 8000bb4:	20000200 	.word	0x20000200

08000bb8 <_read_r>:
 8000bb8:	b570      	push	{r4, r5, r6, lr}
 8000bba:	0004      	movs	r4, r0
 8000bbc:	0008      	movs	r0, r1
 8000bbe:	0011      	movs	r1, r2
 8000bc0:	001a      	movs	r2, r3
 8000bc2:	2300      	movs	r3, #0
 8000bc4:	4d05      	ldr	r5, [pc, #20]	; (8000bdc <_read_r+0x24>)
 8000bc6:	602b      	str	r3, [r5, #0]
 8000bc8:	f7ff fd9a 	bl	8000700 <_read>
 8000bcc:	1c43      	adds	r3, r0, #1
 8000bce:	d103      	bne.n	8000bd8 <_read_r+0x20>
 8000bd0:	682b      	ldr	r3, [r5, #0]
 8000bd2:	2b00      	cmp	r3, #0
 8000bd4:	d000      	beq.n	8000bd8 <_read_r+0x20>
 8000bd6:	6023      	str	r3, [r4, #0]
 8000bd8:	bd70      	pop	{r4, r5, r6, pc}
 8000bda:	46c0      	nop			; (mov r8, r8)
 8000bdc:	20000200 	.word	0x20000200

08000be0 <_write_r>:
 8000be0:	b570      	push	{r4, r5, r6, lr}
 8000be2:	0004      	movs	r4, r0
 8000be4:	0008      	movs	r0, r1
 8000be6:	0011      	movs	r1, r2
 8000be8:	001a      	movs	r2, r3
 8000bea:	2300      	movs	r3, #0
 8000bec:	4d05      	ldr	r5, [pc, #20]	; (8000c04 <_write_r+0x24>)
 8000bee:	602b      	str	r3, [r5, #0]
 8000bf0:	f7ff fda3 	bl	800073a <_write>
 8000bf4:	1c43      	adds	r3, r0, #1
 8000bf6:	d103      	bne.n	8000c00 <_write_r+0x20>
 8000bf8:	682b      	ldr	r3, [r5, #0]
 8000bfa:	2b00      	cmp	r3, #0
 8000bfc:	d000      	beq.n	8000c00 <_write_r+0x20>
 8000bfe:	6023      	str	r3, [r4, #0]
 8000c00:	bd70      	pop	{r4, r5, r6, pc}
 8000c02:	46c0      	nop			; (mov r8, r8)
 8000c04:	20000200 	.word	0x20000200

08000c08 <__errno>:
 8000c08:	4b01      	ldr	r3, [pc, #4]	; (8000c10 <__errno+0x8>)
 8000c0a:	6818      	ldr	r0, [r3, #0]
 8000c0c:	4770      	bx	lr
 8000c0e:	46c0      	nop			; (mov r8, r8)
 8000c10:	200000a0 	.word	0x200000a0

08000c14 <__libc_init_array>:
 8000c14:	b570      	push	{r4, r5, r6, lr}
 8000c16:	2600      	movs	r6, #0
 8000c18:	4c0c      	ldr	r4, [pc, #48]	; (8000c4c <__libc_init_array+0x38>)
 8000c1a:	4d0d      	ldr	r5, [pc, #52]	; (8000c50 <__libc_init_array+0x3c>)
 8000c1c:	1b64      	subs	r4, r4, r5
 8000c1e:	10a4      	asrs	r4, r4, #2
 8000c20:	42a6      	cmp	r6, r4
 8000c22:	d109      	bne.n	8000c38 <__libc_init_array+0x24>
 8000c24:	2600      	movs	r6, #0
 8000c26:	f000 fea1 	bl	800196c <_init>
 8000c2a:	4c0a      	ldr	r4, [pc, #40]	; (8000c54 <__libc_init_array+0x40>)
 8000c2c:	4d0a      	ldr	r5, [pc, #40]	; (8000c58 <__libc_init_array+0x44>)
 8000c2e:	1b64      	subs	r4, r4, r5
 8000c30:	10a4      	asrs	r4, r4, #2
 8000c32:	42a6      	cmp	r6, r4
 8000c34:	d105      	bne.n	8000c42 <__libc_init_array+0x2e>
 8000c36:	bd70      	pop	{r4, r5, r6, pc}
 8000c38:	00b3      	lsls	r3, r6, #2
 8000c3a:	58eb      	ldr	r3, [r5, r3]
 8000c3c:	4798      	blx	r3
 8000c3e:	3601      	adds	r6, #1
 8000c40:	e7ee      	b.n	8000c20 <__libc_init_array+0xc>
 8000c42:	00b3      	lsls	r3, r6, #2
 8000c44:	58eb      	ldr	r3, [r5, r3]
 8000c46:	4798      	blx	r3
 8000c48:	3601      	adds	r6, #1
 8000c4a:	e7f2      	b.n	8000c32 <__libc_init_array+0x1e>
 8000c4c:	08001ac0 	.word	0x08001ac0
 8000c50:	08001ac0 	.word	0x08001ac0
 8000c54:	08001ac4 	.word	0x08001ac4
 8000c58:	08001ac0 	.word	0x08001ac0

08000c5c <__retarget_lock_init_recursive>:
 8000c5c:	4770      	bx	lr

08000c5e <__retarget_lock_acquire_recursive>:
 8000c5e:	4770      	bx	lr

08000c60 <__retarget_lock_release_recursive>:
 8000c60:	4770      	bx	lr
	...

08000c64 <__assert_func>:
 8000c64:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8000c66:	0014      	movs	r4, r2
 8000c68:	001a      	movs	r2, r3
 8000c6a:	4b09      	ldr	r3, [pc, #36]	; (8000c90 <__assert_func+0x2c>)
 8000c6c:	0005      	movs	r5, r0
 8000c6e:	681b      	ldr	r3, [r3, #0]
 8000c70:	000e      	movs	r6, r1
 8000c72:	68d8      	ldr	r0, [r3, #12]
 8000c74:	4b07      	ldr	r3, [pc, #28]	; (8000c94 <__assert_func+0x30>)
 8000c76:	2c00      	cmp	r4, #0
 8000c78:	d101      	bne.n	8000c7e <__assert_func+0x1a>
 8000c7a:	4b07      	ldr	r3, [pc, #28]	; (8000c98 <__assert_func+0x34>)
 8000c7c:	001c      	movs	r4, r3
 8000c7e:	4907      	ldr	r1, [pc, #28]	; (8000c9c <__assert_func+0x38>)
 8000c80:	9301      	str	r3, [sp, #4]
 8000c82:	9402      	str	r4, [sp, #8]
 8000c84:	002b      	movs	r3, r5
 8000c86:	9600      	str	r6, [sp, #0]
 8000c88:	f000 fc8c 	bl	80015a4 <fiprintf>
 8000c8c:	f000 fd93 	bl	80017b6 <abort>
 8000c90:	200000a0 	.word	0x200000a0
 8000c94:	08001a4e 	.word	0x08001a4e
 8000c98:	08001a89 	.word	0x08001a89
 8000c9c:	08001a5b 	.word	0x08001a5b

08000ca0 <_free_r>:
 8000ca0:	b570      	push	{r4, r5, r6, lr}
 8000ca2:	0005      	movs	r5, r0
 8000ca4:	2900      	cmp	r1, #0
 8000ca6:	d010      	beq.n	8000cca <_free_r+0x2a>
 8000ca8:	1f0c      	subs	r4, r1, #4
 8000caa:	6823      	ldr	r3, [r4, #0]
 8000cac:	2b00      	cmp	r3, #0
 8000cae:	da00      	bge.n	8000cb2 <_free_r+0x12>
 8000cb0:	18e4      	adds	r4, r4, r3
 8000cb2:	0028      	movs	r0, r5
 8000cb4:	f000 f8ec 	bl	8000e90 <__malloc_lock>
 8000cb8:	4a1d      	ldr	r2, [pc, #116]	; (8000d30 <_free_r+0x90>)
 8000cba:	6813      	ldr	r3, [r2, #0]
 8000cbc:	2b00      	cmp	r3, #0
 8000cbe:	d105      	bne.n	8000ccc <_free_r+0x2c>
 8000cc0:	6063      	str	r3, [r4, #4]
 8000cc2:	6014      	str	r4, [r2, #0]
 8000cc4:	0028      	movs	r0, r5
 8000cc6:	f000 f8eb 	bl	8000ea0 <__malloc_unlock>
 8000cca:	bd70      	pop	{r4, r5, r6, pc}
 8000ccc:	42a3      	cmp	r3, r4
 8000cce:	d908      	bls.n	8000ce2 <_free_r+0x42>
 8000cd0:	6820      	ldr	r0, [r4, #0]
 8000cd2:	1821      	adds	r1, r4, r0
 8000cd4:	428b      	cmp	r3, r1
 8000cd6:	d1f3      	bne.n	8000cc0 <_free_r+0x20>
 8000cd8:	6819      	ldr	r1, [r3, #0]
 8000cda:	685b      	ldr	r3, [r3, #4]
 8000cdc:	1809      	adds	r1, r1, r0
 8000cde:	6021      	str	r1, [r4, #0]
 8000ce0:	e7ee      	b.n	8000cc0 <_free_r+0x20>
 8000ce2:	001a      	movs	r2, r3
 8000ce4:	685b      	ldr	r3, [r3, #4]
 8000ce6:	2b00      	cmp	r3, #0
 8000ce8:	d001      	beq.n	8000cee <_free_r+0x4e>
 8000cea:	42a3      	cmp	r3, r4
 8000cec:	d9f9      	bls.n	8000ce2 <_free_r+0x42>
 8000cee:	6811      	ldr	r1, [r2, #0]
 8000cf0:	1850      	adds	r0, r2, r1
 8000cf2:	42a0      	cmp	r0, r4
 8000cf4:	d10b      	bne.n	8000d0e <_free_r+0x6e>
 8000cf6:	6820      	ldr	r0, [r4, #0]
 8000cf8:	1809      	adds	r1, r1, r0
 8000cfa:	1850      	adds	r0, r2, r1
 8000cfc:	6011      	str	r1, [r2, #0]
 8000cfe:	4283      	cmp	r3, r0
 8000d00:	d1e0      	bne.n	8000cc4 <_free_r+0x24>
 8000d02:	6818      	ldr	r0, [r3, #0]
 8000d04:	685b      	ldr	r3, [r3, #4]
 8000d06:	1841      	adds	r1, r0, r1
 8000d08:	6011      	str	r1, [r2, #0]
 8000d0a:	6053      	str	r3, [r2, #4]
 8000d0c:	e7da      	b.n	8000cc4 <_free_r+0x24>
 8000d0e:	42a0      	cmp	r0, r4
 8000d10:	d902      	bls.n	8000d18 <_free_r+0x78>
 8000d12:	230c      	movs	r3, #12
 8000d14:	602b      	str	r3, [r5, #0]
 8000d16:	e7d5      	b.n	8000cc4 <_free_r+0x24>
 8000d18:	6820      	ldr	r0, [r4, #0]
 8000d1a:	1821      	adds	r1, r4, r0
 8000d1c:	428b      	cmp	r3, r1
 8000d1e:	d103      	bne.n	8000d28 <_free_r+0x88>
 8000d20:	6819      	ldr	r1, [r3, #0]
 8000d22:	685b      	ldr	r3, [r3, #4]
 8000d24:	1809      	adds	r1, r1, r0
 8000d26:	6021      	str	r1, [r4, #0]
 8000d28:	6063      	str	r3, [r4, #4]
 8000d2a:	6054      	str	r4, [r2, #4]
 8000d2c:	e7ca      	b.n	8000cc4 <_free_r+0x24>
 8000d2e:	46c0      	nop			; (mov r8, r8)
 8000d30:	20000208 	.word	0x20000208

08000d34 <malloc>:
 8000d34:	b510      	push	{r4, lr}
 8000d36:	4b03      	ldr	r3, [pc, #12]	; (8000d44 <malloc+0x10>)
 8000d38:	0001      	movs	r1, r0
 8000d3a:	6818      	ldr	r0, [r3, #0]
 8000d3c:	f000 f826 	bl	8000d8c <_malloc_r>
 8000d40:	bd10      	pop	{r4, pc}
 8000d42:	46c0      	nop			; (mov r8, r8)
 8000d44:	200000a0 	.word	0x200000a0

08000d48 <sbrk_aligned>:
 8000d48:	b570      	push	{r4, r5, r6, lr}
 8000d4a:	4e0f      	ldr	r6, [pc, #60]	; (8000d88 <sbrk_aligned+0x40>)
 8000d4c:	000d      	movs	r5, r1
 8000d4e:	6831      	ldr	r1, [r6, #0]
 8000d50:	0004      	movs	r4, r0
 8000d52:	2900      	cmp	r1, #0
 8000d54:	d102      	bne.n	8000d5c <sbrk_aligned+0x14>
 8000d56:	f000 fd11 	bl	800177c <_sbrk_r>
 8000d5a:	6030      	str	r0, [r6, #0]
 8000d5c:	0029      	movs	r1, r5
 8000d5e:	0020      	movs	r0, r4
 8000d60:	f000 fd0c 	bl	800177c <_sbrk_r>
 8000d64:	1c43      	adds	r3, r0, #1
 8000d66:	d00a      	beq.n	8000d7e <sbrk_aligned+0x36>
 8000d68:	2303      	movs	r3, #3
 8000d6a:	1cc5      	adds	r5, r0, #3
 8000d6c:	439d      	bics	r5, r3
 8000d6e:	42a8      	cmp	r0, r5
 8000d70:	d007      	beq.n	8000d82 <sbrk_aligned+0x3a>
 8000d72:	1a29      	subs	r1, r5, r0
 8000d74:	0020      	movs	r0, r4
 8000d76:	f000 fd01 	bl	800177c <_sbrk_r>
 8000d7a:	3001      	adds	r0, #1
 8000d7c:	d101      	bne.n	8000d82 <sbrk_aligned+0x3a>
 8000d7e:	2501      	movs	r5, #1
 8000d80:	426d      	negs	r5, r5
 8000d82:	0028      	movs	r0, r5
 8000d84:	bd70      	pop	{r4, r5, r6, pc}
 8000d86:	46c0      	nop			; (mov r8, r8)
 8000d88:	2000020c 	.word	0x2000020c

08000d8c <_malloc_r>:
 8000d8c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8000d8e:	2203      	movs	r2, #3
 8000d90:	1ccb      	adds	r3, r1, #3
 8000d92:	4393      	bics	r3, r2
 8000d94:	3308      	adds	r3, #8
 8000d96:	0006      	movs	r6, r0
 8000d98:	001f      	movs	r7, r3
 8000d9a:	2b0c      	cmp	r3, #12
 8000d9c:	d238      	bcs.n	8000e10 <_malloc_r+0x84>
 8000d9e:	270c      	movs	r7, #12
 8000da0:	42b9      	cmp	r1, r7
 8000da2:	d837      	bhi.n	8000e14 <_malloc_r+0x88>
 8000da4:	0030      	movs	r0, r6
 8000da6:	f000 f873 	bl	8000e90 <__malloc_lock>
 8000daa:	4b38      	ldr	r3, [pc, #224]	; (8000e8c <_malloc_r+0x100>)
 8000dac:	9300      	str	r3, [sp, #0]
 8000dae:	681b      	ldr	r3, [r3, #0]
 8000db0:	001c      	movs	r4, r3
 8000db2:	2c00      	cmp	r4, #0
 8000db4:	d133      	bne.n	8000e1e <_malloc_r+0x92>
 8000db6:	0039      	movs	r1, r7
 8000db8:	0030      	movs	r0, r6
 8000dba:	f7ff ffc5 	bl	8000d48 <sbrk_aligned>
 8000dbe:	0004      	movs	r4, r0
 8000dc0:	1c43      	adds	r3, r0, #1
 8000dc2:	d15e      	bne.n	8000e82 <_malloc_r+0xf6>
 8000dc4:	9b00      	ldr	r3, [sp, #0]
 8000dc6:	681c      	ldr	r4, [r3, #0]
 8000dc8:	0025      	movs	r5, r4
 8000dca:	2d00      	cmp	r5, #0
 8000dcc:	d14e      	bne.n	8000e6c <_malloc_r+0xe0>
 8000dce:	2c00      	cmp	r4, #0
 8000dd0:	d051      	beq.n	8000e76 <_malloc_r+0xea>
 8000dd2:	6823      	ldr	r3, [r4, #0]
 8000dd4:	0029      	movs	r1, r5
 8000dd6:	18e3      	adds	r3, r4, r3
 8000dd8:	0030      	movs	r0, r6
 8000dda:	9301      	str	r3, [sp, #4]
 8000ddc:	f000 fcce 	bl	800177c <_sbrk_r>
 8000de0:	9b01      	ldr	r3, [sp, #4]
 8000de2:	4283      	cmp	r3, r0
 8000de4:	d147      	bne.n	8000e76 <_malloc_r+0xea>
 8000de6:	6823      	ldr	r3, [r4, #0]
 8000de8:	0030      	movs	r0, r6
 8000dea:	1aff      	subs	r7, r7, r3
 8000dec:	0039      	movs	r1, r7
 8000dee:	f7ff ffab 	bl	8000d48 <sbrk_aligned>
 8000df2:	3001      	adds	r0, #1
 8000df4:	d03f      	beq.n	8000e76 <_malloc_r+0xea>
 8000df6:	6823      	ldr	r3, [r4, #0]
 8000df8:	19db      	adds	r3, r3, r7
 8000dfa:	6023      	str	r3, [r4, #0]
 8000dfc:	9b00      	ldr	r3, [sp, #0]
 8000dfe:	681b      	ldr	r3, [r3, #0]
 8000e00:	2b00      	cmp	r3, #0
 8000e02:	d040      	beq.n	8000e86 <_malloc_r+0xfa>
 8000e04:	685a      	ldr	r2, [r3, #4]
 8000e06:	42a2      	cmp	r2, r4
 8000e08:	d133      	bne.n	8000e72 <_malloc_r+0xe6>
 8000e0a:	2200      	movs	r2, #0
 8000e0c:	605a      	str	r2, [r3, #4]
 8000e0e:	e014      	b.n	8000e3a <_malloc_r+0xae>
 8000e10:	2b00      	cmp	r3, #0
 8000e12:	dac5      	bge.n	8000da0 <_malloc_r+0x14>
 8000e14:	230c      	movs	r3, #12
 8000e16:	2500      	movs	r5, #0
 8000e18:	6033      	str	r3, [r6, #0]
 8000e1a:	0028      	movs	r0, r5
 8000e1c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8000e1e:	6821      	ldr	r1, [r4, #0]
 8000e20:	1bc9      	subs	r1, r1, r7
 8000e22:	d420      	bmi.n	8000e66 <_malloc_r+0xda>
 8000e24:	290b      	cmp	r1, #11
 8000e26:	d918      	bls.n	8000e5a <_malloc_r+0xce>
 8000e28:	19e2      	adds	r2, r4, r7
 8000e2a:	6027      	str	r7, [r4, #0]
 8000e2c:	42a3      	cmp	r3, r4
 8000e2e:	d112      	bne.n	8000e56 <_malloc_r+0xca>
 8000e30:	9b00      	ldr	r3, [sp, #0]
 8000e32:	601a      	str	r2, [r3, #0]
 8000e34:	6863      	ldr	r3, [r4, #4]
 8000e36:	6011      	str	r1, [r2, #0]
 8000e38:	6053      	str	r3, [r2, #4]
 8000e3a:	0030      	movs	r0, r6
 8000e3c:	0025      	movs	r5, r4
 8000e3e:	f000 f82f 	bl	8000ea0 <__malloc_unlock>
 8000e42:	2207      	movs	r2, #7
 8000e44:	350b      	adds	r5, #11
 8000e46:	1d23      	adds	r3, r4, #4
 8000e48:	4395      	bics	r5, r2
 8000e4a:	1aea      	subs	r2, r5, r3
 8000e4c:	429d      	cmp	r5, r3
 8000e4e:	d0e4      	beq.n	8000e1a <_malloc_r+0x8e>
 8000e50:	1b5b      	subs	r3, r3, r5
 8000e52:	50a3      	str	r3, [r4, r2]
 8000e54:	e7e1      	b.n	8000e1a <_malloc_r+0x8e>
 8000e56:	605a      	str	r2, [r3, #4]
 8000e58:	e7ec      	b.n	8000e34 <_malloc_r+0xa8>
 8000e5a:	6862      	ldr	r2, [r4, #4]
 8000e5c:	42a3      	cmp	r3, r4
 8000e5e:	d1d5      	bne.n	8000e0c <_malloc_r+0x80>
 8000e60:	9b00      	ldr	r3, [sp, #0]
 8000e62:	601a      	str	r2, [r3, #0]
 8000e64:	e7e9      	b.n	8000e3a <_malloc_r+0xae>
 8000e66:	0023      	movs	r3, r4
 8000e68:	6864      	ldr	r4, [r4, #4]
 8000e6a:	e7a2      	b.n	8000db2 <_malloc_r+0x26>
 8000e6c:	002c      	movs	r4, r5
 8000e6e:	686d      	ldr	r5, [r5, #4]
 8000e70:	e7ab      	b.n	8000dca <_malloc_r+0x3e>
 8000e72:	0013      	movs	r3, r2
 8000e74:	e7c4      	b.n	8000e00 <_malloc_r+0x74>
 8000e76:	230c      	movs	r3, #12
 8000e78:	0030      	movs	r0, r6
 8000e7a:	6033      	str	r3, [r6, #0]
 8000e7c:	f000 f810 	bl	8000ea0 <__malloc_unlock>
 8000e80:	e7cb      	b.n	8000e1a <_malloc_r+0x8e>
 8000e82:	6027      	str	r7, [r4, #0]
 8000e84:	e7d9      	b.n	8000e3a <_malloc_r+0xae>
 8000e86:	605b      	str	r3, [r3, #4]
 8000e88:	deff      	udf	#255	; 0xff
 8000e8a:	46c0      	nop			; (mov r8, r8)
 8000e8c:	20000208 	.word	0x20000208

08000e90 <__malloc_lock>:
 8000e90:	b510      	push	{r4, lr}
 8000e92:	4802      	ldr	r0, [pc, #8]	; (8000e9c <__malloc_lock+0xc>)
 8000e94:	f7ff fee3 	bl	8000c5e <__retarget_lock_acquire_recursive>
 8000e98:	bd10      	pop	{r4, pc}
 8000e9a:	46c0      	nop			; (mov r8, r8)
 8000e9c:	20000204 	.word	0x20000204

08000ea0 <__malloc_unlock>:
 8000ea0:	b510      	push	{r4, lr}
 8000ea2:	4802      	ldr	r0, [pc, #8]	; (8000eac <__malloc_unlock+0xc>)
 8000ea4:	f7ff fedc 	bl	8000c60 <__retarget_lock_release_recursive>
 8000ea8:	bd10      	pop	{r4, pc}
 8000eaa:	46c0      	nop			; (mov r8, r8)
 8000eac:	20000204 	.word	0x20000204

08000eb0 <__sfputc_r>:
 8000eb0:	6893      	ldr	r3, [r2, #8]
 8000eb2:	b510      	push	{r4, lr}
 8000eb4:	3b01      	subs	r3, #1
 8000eb6:	6093      	str	r3, [r2, #8]
 8000eb8:	2b00      	cmp	r3, #0
 8000eba:	da04      	bge.n	8000ec6 <__sfputc_r+0x16>
 8000ebc:	6994      	ldr	r4, [r2, #24]
 8000ebe:	42a3      	cmp	r3, r4
 8000ec0:	db07      	blt.n	8000ed2 <__sfputc_r+0x22>
 8000ec2:	290a      	cmp	r1, #10
 8000ec4:	d005      	beq.n	8000ed2 <__sfputc_r+0x22>
 8000ec6:	6813      	ldr	r3, [r2, #0]
 8000ec8:	1c58      	adds	r0, r3, #1
 8000eca:	6010      	str	r0, [r2, #0]
 8000ecc:	7019      	strb	r1, [r3, #0]
 8000ece:	0008      	movs	r0, r1
 8000ed0:	bd10      	pop	{r4, pc}
 8000ed2:	f000 fbad 	bl	8001630 <__swbuf_r>
 8000ed6:	0001      	movs	r1, r0
 8000ed8:	e7f9      	b.n	8000ece <__sfputc_r+0x1e>

08000eda <__sfputs_r>:
 8000eda:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000edc:	0006      	movs	r6, r0
 8000ede:	000f      	movs	r7, r1
 8000ee0:	0014      	movs	r4, r2
 8000ee2:	18d5      	adds	r5, r2, r3
 8000ee4:	42ac      	cmp	r4, r5
 8000ee6:	d101      	bne.n	8000eec <__sfputs_r+0x12>
 8000ee8:	2000      	movs	r0, #0
 8000eea:	e007      	b.n	8000efc <__sfputs_r+0x22>
 8000eec:	7821      	ldrb	r1, [r4, #0]
 8000eee:	003a      	movs	r2, r7
 8000ef0:	0030      	movs	r0, r6
 8000ef2:	f7ff ffdd 	bl	8000eb0 <__sfputc_r>
 8000ef6:	3401      	adds	r4, #1
 8000ef8:	1c43      	adds	r3, r0, #1
 8000efa:	d1f3      	bne.n	8000ee4 <__sfputs_r+0xa>
 8000efc:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000f00 <_vfiprintf_r>:
 8000f00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000f02:	b0a1      	sub	sp, #132	; 0x84
 8000f04:	000f      	movs	r7, r1
 8000f06:	0015      	movs	r5, r2
 8000f08:	001e      	movs	r6, r3
 8000f0a:	9003      	str	r0, [sp, #12]
 8000f0c:	2800      	cmp	r0, #0
 8000f0e:	d004      	beq.n	8000f1a <_vfiprintf_r+0x1a>
 8000f10:	6a03      	ldr	r3, [r0, #32]
 8000f12:	2b00      	cmp	r3, #0
 8000f14:	d101      	bne.n	8000f1a <_vfiprintf_r+0x1a>
 8000f16:	f7ff fd87 	bl	8000a28 <__sinit>
 8000f1a:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8000f1c:	07db      	lsls	r3, r3, #31
 8000f1e:	d405      	bmi.n	8000f2c <_vfiprintf_r+0x2c>
 8000f20:	89bb      	ldrh	r3, [r7, #12]
 8000f22:	059b      	lsls	r3, r3, #22
 8000f24:	d402      	bmi.n	8000f2c <_vfiprintf_r+0x2c>
 8000f26:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8000f28:	f7ff fe99 	bl	8000c5e <__retarget_lock_acquire_recursive>
 8000f2c:	89bb      	ldrh	r3, [r7, #12]
 8000f2e:	071b      	lsls	r3, r3, #28
 8000f30:	d502      	bpl.n	8000f38 <_vfiprintf_r+0x38>
 8000f32:	693b      	ldr	r3, [r7, #16]
 8000f34:	2b00      	cmp	r3, #0
 8000f36:	d113      	bne.n	8000f60 <_vfiprintf_r+0x60>
 8000f38:	0039      	movs	r1, r7
 8000f3a:	9803      	ldr	r0, [sp, #12]
 8000f3c:	f000 fbba 	bl	80016b4 <__swsetup_r>
 8000f40:	2800      	cmp	r0, #0
 8000f42:	d00d      	beq.n	8000f60 <_vfiprintf_r+0x60>
 8000f44:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 8000f46:	07db      	lsls	r3, r3, #31
 8000f48:	d503      	bpl.n	8000f52 <_vfiprintf_r+0x52>
 8000f4a:	2001      	movs	r0, #1
 8000f4c:	4240      	negs	r0, r0
 8000f4e:	b021      	add	sp, #132	; 0x84
 8000f50:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f52:	89bb      	ldrh	r3, [r7, #12]
 8000f54:	059b      	lsls	r3, r3, #22
 8000f56:	d4f8      	bmi.n	8000f4a <_vfiprintf_r+0x4a>
 8000f58:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8000f5a:	f7ff fe81 	bl	8000c60 <__retarget_lock_release_recursive>
 8000f5e:	e7f4      	b.n	8000f4a <_vfiprintf_r+0x4a>
 8000f60:	2300      	movs	r3, #0
 8000f62:	ac08      	add	r4, sp, #32
 8000f64:	6163      	str	r3, [r4, #20]
 8000f66:	3320      	adds	r3, #32
 8000f68:	7663      	strb	r3, [r4, #25]
 8000f6a:	3310      	adds	r3, #16
 8000f6c:	76a3      	strb	r3, [r4, #26]
 8000f6e:	9607      	str	r6, [sp, #28]
 8000f70:	002e      	movs	r6, r5
 8000f72:	7833      	ldrb	r3, [r6, #0]
 8000f74:	2b00      	cmp	r3, #0
 8000f76:	d001      	beq.n	8000f7c <_vfiprintf_r+0x7c>
 8000f78:	2b25      	cmp	r3, #37	; 0x25
 8000f7a:	d148      	bne.n	800100e <_vfiprintf_r+0x10e>
 8000f7c:	1b73      	subs	r3, r6, r5
 8000f7e:	9305      	str	r3, [sp, #20]
 8000f80:	42ae      	cmp	r6, r5
 8000f82:	d00b      	beq.n	8000f9c <_vfiprintf_r+0x9c>
 8000f84:	002a      	movs	r2, r5
 8000f86:	0039      	movs	r1, r7
 8000f88:	9803      	ldr	r0, [sp, #12]
 8000f8a:	f7ff ffa6 	bl	8000eda <__sfputs_r>
 8000f8e:	3001      	adds	r0, #1
 8000f90:	d100      	bne.n	8000f94 <_vfiprintf_r+0x94>
 8000f92:	e0af      	b.n	80010f4 <_vfiprintf_r+0x1f4>
 8000f94:	6963      	ldr	r3, [r4, #20]
 8000f96:	9a05      	ldr	r2, [sp, #20]
 8000f98:	189b      	adds	r3, r3, r2
 8000f9a:	6163      	str	r3, [r4, #20]
 8000f9c:	7833      	ldrb	r3, [r6, #0]
 8000f9e:	2b00      	cmp	r3, #0
 8000fa0:	d100      	bne.n	8000fa4 <_vfiprintf_r+0xa4>
 8000fa2:	e0a7      	b.n	80010f4 <_vfiprintf_r+0x1f4>
 8000fa4:	2201      	movs	r2, #1
 8000fa6:	2300      	movs	r3, #0
 8000fa8:	4252      	negs	r2, r2
 8000faa:	6062      	str	r2, [r4, #4]
 8000fac:	a904      	add	r1, sp, #16
 8000fae:	3254      	adds	r2, #84	; 0x54
 8000fb0:	1852      	adds	r2, r2, r1
 8000fb2:	1c75      	adds	r5, r6, #1
 8000fb4:	6023      	str	r3, [r4, #0]
 8000fb6:	60e3      	str	r3, [r4, #12]
 8000fb8:	60a3      	str	r3, [r4, #8]
 8000fba:	7013      	strb	r3, [r2, #0]
 8000fbc:	65a3      	str	r3, [r4, #88]	; 0x58
 8000fbe:	4b59      	ldr	r3, [pc, #356]	; (8001124 <_vfiprintf_r+0x224>)
 8000fc0:	2205      	movs	r2, #5
 8000fc2:	0018      	movs	r0, r3
 8000fc4:	7829      	ldrb	r1, [r5, #0]
 8000fc6:	9305      	str	r3, [sp, #20]
 8000fc8:	f000 fbea 	bl	80017a0 <memchr>
 8000fcc:	1c6e      	adds	r6, r5, #1
 8000fce:	2800      	cmp	r0, #0
 8000fd0:	d11f      	bne.n	8001012 <_vfiprintf_r+0x112>
 8000fd2:	6822      	ldr	r2, [r4, #0]
 8000fd4:	06d3      	lsls	r3, r2, #27
 8000fd6:	d504      	bpl.n	8000fe2 <_vfiprintf_r+0xe2>
 8000fd8:	2353      	movs	r3, #83	; 0x53
 8000fda:	a904      	add	r1, sp, #16
 8000fdc:	185b      	adds	r3, r3, r1
 8000fde:	2120      	movs	r1, #32
 8000fe0:	7019      	strb	r1, [r3, #0]
 8000fe2:	0713      	lsls	r3, r2, #28
 8000fe4:	d504      	bpl.n	8000ff0 <_vfiprintf_r+0xf0>
 8000fe6:	2353      	movs	r3, #83	; 0x53
 8000fe8:	a904      	add	r1, sp, #16
 8000fea:	185b      	adds	r3, r3, r1
 8000fec:	212b      	movs	r1, #43	; 0x2b
 8000fee:	7019      	strb	r1, [r3, #0]
 8000ff0:	782b      	ldrb	r3, [r5, #0]
 8000ff2:	2b2a      	cmp	r3, #42	; 0x2a
 8000ff4:	d016      	beq.n	8001024 <_vfiprintf_r+0x124>
 8000ff6:	002e      	movs	r6, r5
 8000ff8:	2100      	movs	r1, #0
 8000ffa:	200a      	movs	r0, #10
 8000ffc:	68e3      	ldr	r3, [r4, #12]
 8000ffe:	7832      	ldrb	r2, [r6, #0]
 8001000:	1c75      	adds	r5, r6, #1
 8001002:	3a30      	subs	r2, #48	; 0x30
 8001004:	2a09      	cmp	r2, #9
 8001006:	d94e      	bls.n	80010a6 <_vfiprintf_r+0x1a6>
 8001008:	2900      	cmp	r1, #0
 800100a:	d111      	bne.n	8001030 <_vfiprintf_r+0x130>
 800100c:	e017      	b.n	800103e <_vfiprintf_r+0x13e>
 800100e:	3601      	adds	r6, #1
 8001010:	e7af      	b.n	8000f72 <_vfiprintf_r+0x72>
 8001012:	9b05      	ldr	r3, [sp, #20]
 8001014:	6822      	ldr	r2, [r4, #0]
 8001016:	1ac0      	subs	r0, r0, r3
 8001018:	2301      	movs	r3, #1
 800101a:	4083      	lsls	r3, r0
 800101c:	4313      	orrs	r3, r2
 800101e:	0035      	movs	r5, r6
 8001020:	6023      	str	r3, [r4, #0]
 8001022:	e7cc      	b.n	8000fbe <_vfiprintf_r+0xbe>
 8001024:	9b07      	ldr	r3, [sp, #28]
 8001026:	1d19      	adds	r1, r3, #4
 8001028:	681b      	ldr	r3, [r3, #0]
 800102a:	9107      	str	r1, [sp, #28]
 800102c:	2b00      	cmp	r3, #0
 800102e:	db01      	blt.n	8001034 <_vfiprintf_r+0x134>
 8001030:	930b      	str	r3, [sp, #44]	; 0x2c
 8001032:	e004      	b.n	800103e <_vfiprintf_r+0x13e>
 8001034:	425b      	negs	r3, r3
 8001036:	60e3      	str	r3, [r4, #12]
 8001038:	2302      	movs	r3, #2
 800103a:	4313      	orrs	r3, r2
 800103c:	6023      	str	r3, [r4, #0]
 800103e:	7833      	ldrb	r3, [r6, #0]
 8001040:	2b2e      	cmp	r3, #46	; 0x2e
 8001042:	d10a      	bne.n	800105a <_vfiprintf_r+0x15a>
 8001044:	7873      	ldrb	r3, [r6, #1]
 8001046:	2b2a      	cmp	r3, #42	; 0x2a
 8001048:	d135      	bne.n	80010b6 <_vfiprintf_r+0x1b6>
 800104a:	9b07      	ldr	r3, [sp, #28]
 800104c:	3602      	adds	r6, #2
 800104e:	1d1a      	adds	r2, r3, #4
 8001050:	681b      	ldr	r3, [r3, #0]
 8001052:	9207      	str	r2, [sp, #28]
 8001054:	2b00      	cmp	r3, #0
 8001056:	db2b      	blt.n	80010b0 <_vfiprintf_r+0x1b0>
 8001058:	9309      	str	r3, [sp, #36]	; 0x24
 800105a:	4d33      	ldr	r5, [pc, #204]	; (8001128 <_vfiprintf_r+0x228>)
 800105c:	2203      	movs	r2, #3
 800105e:	0028      	movs	r0, r5
 8001060:	7831      	ldrb	r1, [r6, #0]
 8001062:	f000 fb9d 	bl	80017a0 <memchr>
 8001066:	2800      	cmp	r0, #0
 8001068:	d006      	beq.n	8001078 <_vfiprintf_r+0x178>
 800106a:	2340      	movs	r3, #64	; 0x40
 800106c:	1b40      	subs	r0, r0, r5
 800106e:	4083      	lsls	r3, r0
 8001070:	6822      	ldr	r2, [r4, #0]
 8001072:	3601      	adds	r6, #1
 8001074:	4313      	orrs	r3, r2
 8001076:	6023      	str	r3, [r4, #0]
 8001078:	7831      	ldrb	r1, [r6, #0]
 800107a:	2206      	movs	r2, #6
 800107c:	482b      	ldr	r0, [pc, #172]	; (800112c <_vfiprintf_r+0x22c>)
 800107e:	1c75      	adds	r5, r6, #1
 8001080:	7621      	strb	r1, [r4, #24]
 8001082:	f000 fb8d 	bl	80017a0 <memchr>
 8001086:	2800      	cmp	r0, #0
 8001088:	d043      	beq.n	8001112 <_vfiprintf_r+0x212>
 800108a:	4b29      	ldr	r3, [pc, #164]	; (8001130 <_vfiprintf_r+0x230>)
 800108c:	2b00      	cmp	r3, #0
 800108e:	d125      	bne.n	80010dc <_vfiprintf_r+0x1dc>
 8001090:	2207      	movs	r2, #7
 8001092:	9b07      	ldr	r3, [sp, #28]
 8001094:	3307      	adds	r3, #7
 8001096:	4393      	bics	r3, r2
 8001098:	3308      	adds	r3, #8
 800109a:	9307      	str	r3, [sp, #28]
 800109c:	6963      	ldr	r3, [r4, #20]
 800109e:	9a04      	ldr	r2, [sp, #16]
 80010a0:	189b      	adds	r3, r3, r2
 80010a2:	6163      	str	r3, [r4, #20]
 80010a4:	e764      	b.n	8000f70 <_vfiprintf_r+0x70>
 80010a6:	4343      	muls	r3, r0
 80010a8:	002e      	movs	r6, r5
 80010aa:	2101      	movs	r1, #1
 80010ac:	189b      	adds	r3, r3, r2
 80010ae:	e7a6      	b.n	8000ffe <_vfiprintf_r+0xfe>
 80010b0:	2301      	movs	r3, #1
 80010b2:	425b      	negs	r3, r3
 80010b4:	e7d0      	b.n	8001058 <_vfiprintf_r+0x158>
 80010b6:	2300      	movs	r3, #0
 80010b8:	200a      	movs	r0, #10
 80010ba:	001a      	movs	r2, r3
 80010bc:	3601      	adds	r6, #1
 80010be:	6063      	str	r3, [r4, #4]
 80010c0:	7831      	ldrb	r1, [r6, #0]
 80010c2:	1c75      	adds	r5, r6, #1
 80010c4:	3930      	subs	r1, #48	; 0x30
 80010c6:	2909      	cmp	r1, #9
 80010c8:	d903      	bls.n	80010d2 <_vfiprintf_r+0x1d2>
 80010ca:	2b00      	cmp	r3, #0
 80010cc:	d0c5      	beq.n	800105a <_vfiprintf_r+0x15a>
 80010ce:	9209      	str	r2, [sp, #36]	; 0x24
 80010d0:	e7c3      	b.n	800105a <_vfiprintf_r+0x15a>
 80010d2:	4342      	muls	r2, r0
 80010d4:	002e      	movs	r6, r5
 80010d6:	2301      	movs	r3, #1
 80010d8:	1852      	adds	r2, r2, r1
 80010da:	e7f1      	b.n	80010c0 <_vfiprintf_r+0x1c0>
 80010dc:	aa07      	add	r2, sp, #28
 80010de:	9200      	str	r2, [sp, #0]
 80010e0:	0021      	movs	r1, r4
 80010e2:	003a      	movs	r2, r7
 80010e4:	4b13      	ldr	r3, [pc, #76]	; (8001134 <_vfiprintf_r+0x234>)
 80010e6:	9803      	ldr	r0, [sp, #12]
 80010e8:	e000      	b.n	80010ec <_vfiprintf_r+0x1ec>
 80010ea:	bf00      	nop
 80010ec:	9004      	str	r0, [sp, #16]
 80010ee:	9b04      	ldr	r3, [sp, #16]
 80010f0:	3301      	adds	r3, #1
 80010f2:	d1d3      	bne.n	800109c <_vfiprintf_r+0x19c>
 80010f4:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80010f6:	07db      	lsls	r3, r3, #31
 80010f8:	d405      	bmi.n	8001106 <_vfiprintf_r+0x206>
 80010fa:	89bb      	ldrh	r3, [r7, #12]
 80010fc:	059b      	lsls	r3, r3, #22
 80010fe:	d402      	bmi.n	8001106 <_vfiprintf_r+0x206>
 8001100:	6db8      	ldr	r0, [r7, #88]	; 0x58
 8001102:	f7ff fdad 	bl	8000c60 <__retarget_lock_release_recursive>
 8001106:	89bb      	ldrh	r3, [r7, #12]
 8001108:	065b      	lsls	r3, r3, #25
 800110a:	d500      	bpl.n	800110e <_vfiprintf_r+0x20e>
 800110c:	e71d      	b.n	8000f4a <_vfiprintf_r+0x4a>
 800110e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8001110:	e71d      	b.n	8000f4e <_vfiprintf_r+0x4e>
 8001112:	aa07      	add	r2, sp, #28
 8001114:	9200      	str	r2, [sp, #0]
 8001116:	0021      	movs	r1, r4
 8001118:	003a      	movs	r2, r7
 800111a:	4b06      	ldr	r3, [pc, #24]	; (8001134 <_vfiprintf_r+0x234>)
 800111c:	9803      	ldr	r0, [sp, #12]
 800111e:	f000 f87b 	bl	8001218 <_printf_i>
 8001122:	e7e3      	b.n	80010ec <_vfiprintf_r+0x1ec>
 8001124:	08001a8a 	.word	0x08001a8a
 8001128:	08001a90 	.word	0x08001a90
 800112c:	08001a94 	.word	0x08001a94
 8001130:	00000000 	.word	0x00000000
 8001134:	08000edb 	.word	0x08000edb

08001138 <_printf_common>:
 8001138:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800113a:	0016      	movs	r6, r2
 800113c:	9301      	str	r3, [sp, #4]
 800113e:	688a      	ldr	r2, [r1, #8]
 8001140:	690b      	ldr	r3, [r1, #16]
 8001142:	000c      	movs	r4, r1
 8001144:	9000      	str	r0, [sp, #0]
 8001146:	4293      	cmp	r3, r2
 8001148:	da00      	bge.n	800114c <_printf_common+0x14>
 800114a:	0013      	movs	r3, r2
 800114c:	0022      	movs	r2, r4
 800114e:	6033      	str	r3, [r6, #0]
 8001150:	3243      	adds	r2, #67	; 0x43
 8001152:	7812      	ldrb	r2, [r2, #0]
 8001154:	2a00      	cmp	r2, #0
 8001156:	d001      	beq.n	800115c <_printf_common+0x24>
 8001158:	3301      	adds	r3, #1
 800115a:	6033      	str	r3, [r6, #0]
 800115c:	6823      	ldr	r3, [r4, #0]
 800115e:	069b      	lsls	r3, r3, #26
 8001160:	d502      	bpl.n	8001168 <_printf_common+0x30>
 8001162:	6833      	ldr	r3, [r6, #0]
 8001164:	3302      	adds	r3, #2
 8001166:	6033      	str	r3, [r6, #0]
 8001168:	6822      	ldr	r2, [r4, #0]
 800116a:	2306      	movs	r3, #6
 800116c:	0015      	movs	r5, r2
 800116e:	401d      	ands	r5, r3
 8001170:	421a      	tst	r2, r3
 8001172:	d027      	beq.n	80011c4 <_printf_common+0x8c>
 8001174:	0023      	movs	r3, r4
 8001176:	3343      	adds	r3, #67	; 0x43
 8001178:	781b      	ldrb	r3, [r3, #0]
 800117a:	1e5a      	subs	r2, r3, #1
 800117c:	4193      	sbcs	r3, r2
 800117e:	6822      	ldr	r2, [r4, #0]
 8001180:	0692      	lsls	r2, r2, #26
 8001182:	d430      	bmi.n	80011e6 <_printf_common+0xae>
 8001184:	0022      	movs	r2, r4
 8001186:	9901      	ldr	r1, [sp, #4]
 8001188:	9800      	ldr	r0, [sp, #0]
 800118a:	9d08      	ldr	r5, [sp, #32]
 800118c:	3243      	adds	r2, #67	; 0x43
 800118e:	47a8      	blx	r5
 8001190:	3001      	adds	r0, #1
 8001192:	d025      	beq.n	80011e0 <_printf_common+0xa8>
 8001194:	2206      	movs	r2, #6
 8001196:	6823      	ldr	r3, [r4, #0]
 8001198:	2500      	movs	r5, #0
 800119a:	4013      	ands	r3, r2
 800119c:	2b04      	cmp	r3, #4
 800119e:	d105      	bne.n	80011ac <_printf_common+0x74>
 80011a0:	6833      	ldr	r3, [r6, #0]
 80011a2:	68e5      	ldr	r5, [r4, #12]
 80011a4:	1aed      	subs	r5, r5, r3
 80011a6:	43eb      	mvns	r3, r5
 80011a8:	17db      	asrs	r3, r3, #31
 80011aa:	401d      	ands	r5, r3
 80011ac:	68a3      	ldr	r3, [r4, #8]
 80011ae:	6922      	ldr	r2, [r4, #16]
 80011b0:	4293      	cmp	r3, r2
 80011b2:	dd01      	ble.n	80011b8 <_printf_common+0x80>
 80011b4:	1a9b      	subs	r3, r3, r2
 80011b6:	18ed      	adds	r5, r5, r3
 80011b8:	2600      	movs	r6, #0
 80011ba:	42b5      	cmp	r5, r6
 80011bc:	d120      	bne.n	8001200 <_printf_common+0xc8>
 80011be:	2000      	movs	r0, #0
 80011c0:	e010      	b.n	80011e4 <_printf_common+0xac>
 80011c2:	3501      	adds	r5, #1
 80011c4:	68e3      	ldr	r3, [r4, #12]
 80011c6:	6832      	ldr	r2, [r6, #0]
 80011c8:	1a9b      	subs	r3, r3, r2
 80011ca:	42ab      	cmp	r3, r5
 80011cc:	ddd2      	ble.n	8001174 <_printf_common+0x3c>
 80011ce:	0022      	movs	r2, r4
 80011d0:	2301      	movs	r3, #1
 80011d2:	9901      	ldr	r1, [sp, #4]
 80011d4:	9800      	ldr	r0, [sp, #0]
 80011d6:	9f08      	ldr	r7, [sp, #32]
 80011d8:	3219      	adds	r2, #25
 80011da:	47b8      	blx	r7
 80011dc:	3001      	adds	r0, #1
 80011de:	d1f0      	bne.n	80011c2 <_printf_common+0x8a>
 80011e0:	2001      	movs	r0, #1
 80011e2:	4240      	negs	r0, r0
 80011e4:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80011e6:	2030      	movs	r0, #48	; 0x30
 80011e8:	18e1      	adds	r1, r4, r3
 80011ea:	3143      	adds	r1, #67	; 0x43
 80011ec:	7008      	strb	r0, [r1, #0]
 80011ee:	0021      	movs	r1, r4
 80011f0:	1c5a      	adds	r2, r3, #1
 80011f2:	3145      	adds	r1, #69	; 0x45
 80011f4:	7809      	ldrb	r1, [r1, #0]
 80011f6:	18a2      	adds	r2, r4, r2
 80011f8:	3243      	adds	r2, #67	; 0x43
 80011fa:	3302      	adds	r3, #2
 80011fc:	7011      	strb	r1, [r2, #0]
 80011fe:	e7c1      	b.n	8001184 <_printf_common+0x4c>
 8001200:	0022      	movs	r2, r4
 8001202:	2301      	movs	r3, #1
 8001204:	9901      	ldr	r1, [sp, #4]
 8001206:	9800      	ldr	r0, [sp, #0]
 8001208:	9f08      	ldr	r7, [sp, #32]
 800120a:	321a      	adds	r2, #26
 800120c:	47b8      	blx	r7
 800120e:	3001      	adds	r0, #1
 8001210:	d0e6      	beq.n	80011e0 <_printf_common+0xa8>
 8001212:	3601      	adds	r6, #1
 8001214:	e7d1      	b.n	80011ba <_printf_common+0x82>
	...

08001218 <_printf_i>:
 8001218:	b5f0      	push	{r4, r5, r6, r7, lr}
 800121a:	b08b      	sub	sp, #44	; 0x2c
 800121c:	9206      	str	r2, [sp, #24]
 800121e:	000a      	movs	r2, r1
 8001220:	3243      	adds	r2, #67	; 0x43
 8001222:	9307      	str	r3, [sp, #28]
 8001224:	9005      	str	r0, [sp, #20]
 8001226:	9204      	str	r2, [sp, #16]
 8001228:	7e0a      	ldrb	r2, [r1, #24]
 800122a:	000c      	movs	r4, r1
 800122c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800122e:	2a78      	cmp	r2, #120	; 0x78
 8001230:	d809      	bhi.n	8001246 <_printf_i+0x2e>
 8001232:	2a62      	cmp	r2, #98	; 0x62
 8001234:	d80b      	bhi.n	800124e <_printf_i+0x36>
 8001236:	2a00      	cmp	r2, #0
 8001238:	d100      	bne.n	800123c <_printf_i+0x24>
 800123a:	e0be      	b.n	80013ba <_printf_i+0x1a2>
 800123c:	497c      	ldr	r1, [pc, #496]	; (8001430 <_printf_i+0x218>)
 800123e:	9103      	str	r1, [sp, #12]
 8001240:	2a58      	cmp	r2, #88	; 0x58
 8001242:	d100      	bne.n	8001246 <_printf_i+0x2e>
 8001244:	e093      	b.n	800136e <_printf_i+0x156>
 8001246:	0026      	movs	r6, r4
 8001248:	3642      	adds	r6, #66	; 0x42
 800124a:	7032      	strb	r2, [r6, #0]
 800124c:	e022      	b.n	8001294 <_printf_i+0x7c>
 800124e:	0010      	movs	r0, r2
 8001250:	3863      	subs	r0, #99	; 0x63
 8001252:	2815      	cmp	r0, #21
 8001254:	d8f7      	bhi.n	8001246 <_printf_i+0x2e>
 8001256:	f7fe ff57 	bl	8000108 <__gnu_thumb1_case_shi>
 800125a:	0016      	.short	0x0016
 800125c:	fff6001f 	.word	0xfff6001f
 8001260:	fff6fff6 	.word	0xfff6fff6
 8001264:	001ffff6 	.word	0x001ffff6
 8001268:	fff6fff6 	.word	0xfff6fff6
 800126c:	fff6fff6 	.word	0xfff6fff6
 8001270:	003600a3 	.word	0x003600a3
 8001274:	fff60083 	.word	0xfff60083
 8001278:	00b4fff6 	.word	0x00b4fff6
 800127c:	0036fff6 	.word	0x0036fff6
 8001280:	fff6fff6 	.word	0xfff6fff6
 8001284:	0087      	.short	0x0087
 8001286:	0026      	movs	r6, r4
 8001288:	681a      	ldr	r2, [r3, #0]
 800128a:	3642      	adds	r6, #66	; 0x42
 800128c:	1d11      	adds	r1, r2, #4
 800128e:	6019      	str	r1, [r3, #0]
 8001290:	6813      	ldr	r3, [r2, #0]
 8001292:	7033      	strb	r3, [r6, #0]
 8001294:	2301      	movs	r3, #1
 8001296:	e0a2      	b.n	80013de <_printf_i+0x1c6>
 8001298:	6818      	ldr	r0, [r3, #0]
 800129a:	6809      	ldr	r1, [r1, #0]
 800129c:	1d02      	adds	r2, r0, #4
 800129e:	060d      	lsls	r5, r1, #24
 80012a0:	d50b      	bpl.n	80012ba <_printf_i+0xa2>
 80012a2:	6805      	ldr	r5, [r0, #0]
 80012a4:	601a      	str	r2, [r3, #0]
 80012a6:	2d00      	cmp	r5, #0
 80012a8:	da03      	bge.n	80012b2 <_printf_i+0x9a>
 80012aa:	232d      	movs	r3, #45	; 0x2d
 80012ac:	9a04      	ldr	r2, [sp, #16]
 80012ae:	426d      	negs	r5, r5
 80012b0:	7013      	strb	r3, [r2, #0]
 80012b2:	4b5f      	ldr	r3, [pc, #380]	; (8001430 <_printf_i+0x218>)
 80012b4:	270a      	movs	r7, #10
 80012b6:	9303      	str	r3, [sp, #12]
 80012b8:	e01b      	b.n	80012f2 <_printf_i+0xda>
 80012ba:	6805      	ldr	r5, [r0, #0]
 80012bc:	601a      	str	r2, [r3, #0]
 80012be:	0649      	lsls	r1, r1, #25
 80012c0:	d5f1      	bpl.n	80012a6 <_printf_i+0x8e>
 80012c2:	b22d      	sxth	r5, r5
 80012c4:	e7ef      	b.n	80012a6 <_printf_i+0x8e>
 80012c6:	680d      	ldr	r5, [r1, #0]
 80012c8:	6819      	ldr	r1, [r3, #0]
 80012ca:	1d08      	adds	r0, r1, #4
 80012cc:	6018      	str	r0, [r3, #0]
 80012ce:	062e      	lsls	r6, r5, #24
 80012d0:	d501      	bpl.n	80012d6 <_printf_i+0xbe>
 80012d2:	680d      	ldr	r5, [r1, #0]
 80012d4:	e003      	b.n	80012de <_printf_i+0xc6>
 80012d6:	066d      	lsls	r5, r5, #25
 80012d8:	d5fb      	bpl.n	80012d2 <_printf_i+0xba>
 80012da:	680d      	ldr	r5, [r1, #0]
 80012dc:	b2ad      	uxth	r5, r5
 80012de:	4b54      	ldr	r3, [pc, #336]	; (8001430 <_printf_i+0x218>)
 80012e0:	2708      	movs	r7, #8
 80012e2:	9303      	str	r3, [sp, #12]
 80012e4:	2a6f      	cmp	r2, #111	; 0x6f
 80012e6:	d000      	beq.n	80012ea <_printf_i+0xd2>
 80012e8:	3702      	adds	r7, #2
 80012ea:	0023      	movs	r3, r4
 80012ec:	2200      	movs	r2, #0
 80012ee:	3343      	adds	r3, #67	; 0x43
 80012f0:	701a      	strb	r2, [r3, #0]
 80012f2:	6863      	ldr	r3, [r4, #4]
 80012f4:	60a3      	str	r3, [r4, #8]
 80012f6:	2b00      	cmp	r3, #0
 80012f8:	db03      	blt.n	8001302 <_printf_i+0xea>
 80012fa:	2104      	movs	r1, #4
 80012fc:	6822      	ldr	r2, [r4, #0]
 80012fe:	438a      	bics	r2, r1
 8001300:	6022      	str	r2, [r4, #0]
 8001302:	2d00      	cmp	r5, #0
 8001304:	d102      	bne.n	800130c <_printf_i+0xf4>
 8001306:	9e04      	ldr	r6, [sp, #16]
 8001308:	2b00      	cmp	r3, #0
 800130a:	d00c      	beq.n	8001326 <_printf_i+0x10e>
 800130c:	9e04      	ldr	r6, [sp, #16]
 800130e:	0028      	movs	r0, r5
 8001310:	0039      	movs	r1, r7
 8001312:	f7fe ff89 	bl	8000228 <__aeabi_uidivmod>
 8001316:	9b03      	ldr	r3, [sp, #12]
 8001318:	3e01      	subs	r6, #1
 800131a:	5c5b      	ldrb	r3, [r3, r1]
 800131c:	7033      	strb	r3, [r6, #0]
 800131e:	002b      	movs	r3, r5
 8001320:	0005      	movs	r5, r0
 8001322:	429f      	cmp	r7, r3
 8001324:	d9f3      	bls.n	800130e <_printf_i+0xf6>
 8001326:	2f08      	cmp	r7, #8
 8001328:	d109      	bne.n	800133e <_printf_i+0x126>
 800132a:	6823      	ldr	r3, [r4, #0]
 800132c:	07db      	lsls	r3, r3, #31
 800132e:	d506      	bpl.n	800133e <_printf_i+0x126>
 8001330:	6862      	ldr	r2, [r4, #4]
 8001332:	6923      	ldr	r3, [r4, #16]
 8001334:	429a      	cmp	r2, r3
 8001336:	dc02      	bgt.n	800133e <_printf_i+0x126>
 8001338:	2330      	movs	r3, #48	; 0x30
 800133a:	3e01      	subs	r6, #1
 800133c:	7033      	strb	r3, [r6, #0]
 800133e:	9b04      	ldr	r3, [sp, #16]
 8001340:	1b9b      	subs	r3, r3, r6
 8001342:	6123      	str	r3, [r4, #16]
 8001344:	9b07      	ldr	r3, [sp, #28]
 8001346:	0021      	movs	r1, r4
 8001348:	9300      	str	r3, [sp, #0]
 800134a:	9805      	ldr	r0, [sp, #20]
 800134c:	9b06      	ldr	r3, [sp, #24]
 800134e:	aa09      	add	r2, sp, #36	; 0x24
 8001350:	f7ff fef2 	bl	8001138 <_printf_common>
 8001354:	3001      	adds	r0, #1
 8001356:	d147      	bne.n	80013e8 <_printf_i+0x1d0>
 8001358:	2001      	movs	r0, #1
 800135a:	4240      	negs	r0, r0
 800135c:	b00b      	add	sp, #44	; 0x2c
 800135e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001360:	2220      	movs	r2, #32
 8001362:	6809      	ldr	r1, [r1, #0]
 8001364:	430a      	orrs	r2, r1
 8001366:	6022      	str	r2, [r4, #0]
 8001368:	2278      	movs	r2, #120	; 0x78
 800136a:	4932      	ldr	r1, [pc, #200]	; (8001434 <_printf_i+0x21c>)
 800136c:	9103      	str	r1, [sp, #12]
 800136e:	0021      	movs	r1, r4
 8001370:	3145      	adds	r1, #69	; 0x45
 8001372:	700a      	strb	r2, [r1, #0]
 8001374:	6819      	ldr	r1, [r3, #0]
 8001376:	6822      	ldr	r2, [r4, #0]
 8001378:	c920      	ldmia	r1!, {r5}
 800137a:	0610      	lsls	r0, r2, #24
 800137c:	d402      	bmi.n	8001384 <_printf_i+0x16c>
 800137e:	0650      	lsls	r0, r2, #25
 8001380:	d500      	bpl.n	8001384 <_printf_i+0x16c>
 8001382:	b2ad      	uxth	r5, r5
 8001384:	6019      	str	r1, [r3, #0]
 8001386:	07d3      	lsls	r3, r2, #31
 8001388:	d502      	bpl.n	8001390 <_printf_i+0x178>
 800138a:	2320      	movs	r3, #32
 800138c:	4313      	orrs	r3, r2
 800138e:	6023      	str	r3, [r4, #0]
 8001390:	2710      	movs	r7, #16
 8001392:	2d00      	cmp	r5, #0
 8001394:	d1a9      	bne.n	80012ea <_printf_i+0xd2>
 8001396:	2220      	movs	r2, #32
 8001398:	6823      	ldr	r3, [r4, #0]
 800139a:	4393      	bics	r3, r2
 800139c:	6023      	str	r3, [r4, #0]
 800139e:	e7a4      	b.n	80012ea <_printf_i+0xd2>
 80013a0:	681a      	ldr	r2, [r3, #0]
 80013a2:	680d      	ldr	r5, [r1, #0]
 80013a4:	1d10      	adds	r0, r2, #4
 80013a6:	6949      	ldr	r1, [r1, #20]
 80013a8:	6018      	str	r0, [r3, #0]
 80013aa:	6813      	ldr	r3, [r2, #0]
 80013ac:	062e      	lsls	r6, r5, #24
 80013ae:	d501      	bpl.n	80013b4 <_printf_i+0x19c>
 80013b0:	6019      	str	r1, [r3, #0]
 80013b2:	e002      	b.n	80013ba <_printf_i+0x1a2>
 80013b4:	066d      	lsls	r5, r5, #25
 80013b6:	d5fb      	bpl.n	80013b0 <_printf_i+0x198>
 80013b8:	8019      	strh	r1, [r3, #0]
 80013ba:	2300      	movs	r3, #0
 80013bc:	9e04      	ldr	r6, [sp, #16]
 80013be:	6123      	str	r3, [r4, #16]
 80013c0:	e7c0      	b.n	8001344 <_printf_i+0x12c>
 80013c2:	681a      	ldr	r2, [r3, #0]
 80013c4:	1d11      	adds	r1, r2, #4
 80013c6:	6019      	str	r1, [r3, #0]
 80013c8:	6816      	ldr	r6, [r2, #0]
 80013ca:	2100      	movs	r1, #0
 80013cc:	0030      	movs	r0, r6
 80013ce:	6862      	ldr	r2, [r4, #4]
 80013d0:	f000 f9e6 	bl	80017a0 <memchr>
 80013d4:	2800      	cmp	r0, #0
 80013d6:	d001      	beq.n	80013dc <_printf_i+0x1c4>
 80013d8:	1b80      	subs	r0, r0, r6
 80013da:	6060      	str	r0, [r4, #4]
 80013dc:	6863      	ldr	r3, [r4, #4]
 80013de:	6123      	str	r3, [r4, #16]
 80013e0:	2300      	movs	r3, #0
 80013e2:	9a04      	ldr	r2, [sp, #16]
 80013e4:	7013      	strb	r3, [r2, #0]
 80013e6:	e7ad      	b.n	8001344 <_printf_i+0x12c>
 80013e8:	0032      	movs	r2, r6
 80013ea:	6923      	ldr	r3, [r4, #16]
 80013ec:	9906      	ldr	r1, [sp, #24]
 80013ee:	9805      	ldr	r0, [sp, #20]
 80013f0:	9d07      	ldr	r5, [sp, #28]
 80013f2:	47a8      	blx	r5
 80013f4:	3001      	adds	r0, #1
 80013f6:	d0af      	beq.n	8001358 <_printf_i+0x140>
 80013f8:	6823      	ldr	r3, [r4, #0]
 80013fa:	079b      	lsls	r3, r3, #30
 80013fc:	d415      	bmi.n	800142a <_printf_i+0x212>
 80013fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8001400:	68e0      	ldr	r0, [r4, #12]
 8001402:	4298      	cmp	r0, r3
 8001404:	daaa      	bge.n	800135c <_printf_i+0x144>
 8001406:	0018      	movs	r0, r3
 8001408:	e7a8      	b.n	800135c <_printf_i+0x144>
 800140a:	0022      	movs	r2, r4
 800140c:	2301      	movs	r3, #1
 800140e:	9906      	ldr	r1, [sp, #24]
 8001410:	9805      	ldr	r0, [sp, #20]
 8001412:	9e07      	ldr	r6, [sp, #28]
 8001414:	3219      	adds	r2, #25
 8001416:	47b0      	blx	r6
 8001418:	3001      	adds	r0, #1
 800141a:	d09d      	beq.n	8001358 <_printf_i+0x140>
 800141c:	3501      	adds	r5, #1
 800141e:	68e3      	ldr	r3, [r4, #12]
 8001420:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8001422:	1a9b      	subs	r3, r3, r2
 8001424:	42ab      	cmp	r3, r5
 8001426:	dcf0      	bgt.n	800140a <_printf_i+0x1f2>
 8001428:	e7e9      	b.n	80013fe <_printf_i+0x1e6>
 800142a:	2500      	movs	r5, #0
 800142c:	e7f7      	b.n	800141e <_printf_i+0x206>
 800142e:	46c0      	nop			; (mov r8, r8)
 8001430:	08001a9b 	.word	0x08001a9b
 8001434:	08001aac 	.word	0x08001aac

08001438 <__sflush_r>:
 8001438:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800143a:	898b      	ldrh	r3, [r1, #12]
 800143c:	0005      	movs	r5, r0
 800143e:	000c      	movs	r4, r1
 8001440:	071a      	lsls	r2, r3, #28
 8001442:	d45c      	bmi.n	80014fe <__sflush_r+0xc6>
 8001444:	684a      	ldr	r2, [r1, #4]
 8001446:	2a00      	cmp	r2, #0
 8001448:	dc04      	bgt.n	8001454 <__sflush_r+0x1c>
 800144a:	6c0a      	ldr	r2, [r1, #64]	; 0x40
 800144c:	2a00      	cmp	r2, #0
 800144e:	dc01      	bgt.n	8001454 <__sflush_r+0x1c>
 8001450:	2000      	movs	r0, #0
 8001452:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8001454:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 8001456:	2f00      	cmp	r7, #0
 8001458:	d0fa      	beq.n	8001450 <__sflush_r+0x18>
 800145a:	2200      	movs	r2, #0
 800145c:	2080      	movs	r0, #128	; 0x80
 800145e:	682e      	ldr	r6, [r5, #0]
 8001460:	602a      	str	r2, [r5, #0]
 8001462:	001a      	movs	r2, r3
 8001464:	0140      	lsls	r0, r0, #5
 8001466:	6a21      	ldr	r1, [r4, #32]
 8001468:	4002      	ands	r2, r0
 800146a:	4203      	tst	r3, r0
 800146c:	d034      	beq.n	80014d8 <__sflush_r+0xa0>
 800146e:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8001470:	89a3      	ldrh	r3, [r4, #12]
 8001472:	075b      	lsls	r3, r3, #29
 8001474:	d506      	bpl.n	8001484 <__sflush_r+0x4c>
 8001476:	6863      	ldr	r3, [r4, #4]
 8001478:	1ac0      	subs	r0, r0, r3
 800147a:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800147c:	2b00      	cmp	r3, #0
 800147e:	d001      	beq.n	8001484 <__sflush_r+0x4c>
 8001480:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001482:	1ac0      	subs	r0, r0, r3
 8001484:	0002      	movs	r2, r0
 8001486:	2300      	movs	r3, #0
 8001488:	0028      	movs	r0, r5
 800148a:	6ae7      	ldr	r7, [r4, #44]	; 0x2c
 800148c:	6a21      	ldr	r1, [r4, #32]
 800148e:	47b8      	blx	r7
 8001490:	89a2      	ldrh	r2, [r4, #12]
 8001492:	1c43      	adds	r3, r0, #1
 8001494:	d106      	bne.n	80014a4 <__sflush_r+0x6c>
 8001496:	6829      	ldr	r1, [r5, #0]
 8001498:	291d      	cmp	r1, #29
 800149a:	d82c      	bhi.n	80014f6 <__sflush_r+0xbe>
 800149c:	4b2a      	ldr	r3, [pc, #168]	; (8001548 <__sflush_r+0x110>)
 800149e:	410b      	asrs	r3, r1
 80014a0:	07db      	lsls	r3, r3, #31
 80014a2:	d428      	bmi.n	80014f6 <__sflush_r+0xbe>
 80014a4:	2300      	movs	r3, #0
 80014a6:	6063      	str	r3, [r4, #4]
 80014a8:	6923      	ldr	r3, [r4, #16]
 80014aa:	6023      	str	r3, [r4, #0]
 80014ac:	04d2      	lsls	r2, r2, #19
 80014ae:	d505      	bpl.n	80014bc <__sflush_r+0x84>
 80014b0:	1c43      	adds	r3, r0, #1
 80014b2:	d102      	bne.n	80014ba <__sflush_r+0x82>
 80014b4:	682b      	ldr	r3, [r5, #0]
 80014b6:	2b00      	cmp	r3, #0
 80014b8:	d100      	bne.n	80014bc <__sflush_r+0x84>
 80014ba:	6560      	str	r0, [r4, #84]	; 0x54
 80014bc:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80014be:	602e      	str	r6, [r5, #0]
 80014c0:	2900      	cmp	r1, #0
 80014c2:	d0c5      	beq.n	8001450 <__sflush_r+0x18>
 80014c4:	0023      	movs	r3, r4
 80014c6:	3344      	adds	r3, #68	; 0x44
 80014c8:	4299      	cmp	r1, r3
 80014ca:	d002      	beq.n	80014d2 <__sflush_r+0x9a>
 80014cc:	0028      	movs	r0, r5
 80014ce:	f7ff fbe7 	bl	8000ca0 <_free_r>
 80014d2:	2000      	movs	r0, #0
 80014d4:	6360      	str	r0, [r4, #52]	; 0x34
 80014d6:	e7bc      	b.n	8001452 <__sflush_r+0x1a>
 80014d8:	2301      	movs	r3, #1
 80014da:	0028      	movs	r0, r5
 80014dc:	47b8      	blx	r7
 80014de:	1c43      	adds	r3, r0, #1
 80014e0:	d1c6      	bne.n	8001470 <__sflush_r+0x38>
 80014e2:	682b      	ldr	r3, [r5, #0]
 80014e4:	2b00      	cmp	r3, #0
 80014e6:	d0c3      	beq.n	8001470 <__sflush_r+0x38>
 80014e8:	2b1d      	cmp	r3, #29
 80014ea:	d001      	beq.n	80014f0 <__sflush_r+0xb8>
 80014ec:	2b16      	cmp	r3, #22
 80014ee:	d101      	bne.n	80014f4 <__sflush_r+0xbc>
 80014f0:	602e      	str	r6, [r5, #0]
 80014f2:	e7ad      	b.n	8001450 <__sflush_r+0x18>
 80014f4:	89a2      	ldrh	r2, [r4, #12]
 80014f6:	2340      	movs	r3, #64	; 0x40
 80014f8:	4313      	orrs	r3, r2
 80014fa:	81a3      	strh	r3, [r4, #12]
 80014fc:	e7a9      	b.n	8001452 <__sflush_r+0x1a>
 80014fe:	690e      	ldr	r6, [r1, #16]
 8001500:	2e00      	cmp	r6, #0
 8001502:	d0a5      	beq.n	8001450 <__sflush_r+0x18>
 8001504:	680f      	ldr	r7, [r1, #0]
 8001506:	600e      	str	r6, [r1, #0]
 8001508:	1bba      	subs	r2, r7, r6
 800150a:	9201      	str	r2, [sp, #4]
 800150c:	2200      	movs	r2, #0
 800150e:	079b      	lsls	r3, r3, #30
 8001510:	d100      	bne.n	8001514 <__sflush_r+0xdc>
 8001512:	694a      	ldr	r2, [r1, #20]
 8001514:	60a2      	str	r2, [r4, #8]
 8001516:	9b01      	ldr	r3, [sp, #4]
 8001518:	2b00      	cmp	r3, #0
 800151a:	dd99      	ble.n	8001450 <__sflush_r+0x18>
 800151c:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800151e:	0032      	movs	r2, r6
 8001520:	001f      	movs	r7, r3
 8001522:	0028      	movs	r0, r5
 8001524:	9b01      	ldr	r3, [sp, #4]
 8001526:	6a21      	ldr	r1, [r4, #32]
 8001528:	47b8      	blx	r7
 800152a:	2800      	cmp	r0, #0
 800152c:	dc06      	bgt.n	800153c <__sflush_r+0x104>
 800152e:	2340      	movs	r3, #64	; 0x40
 8001530:	2001      	movs	r0, #1
 8001532:	89a2      	ldrh	r2, [r4, #12]
 8001534:	4240      	negs	r0, r0
 8001536:	4313      	orrs	r3, r2
 8001538:	81a3      	strh	r3, [r4, #12]
 800153a:	e78a      	b.n	8001452 <__sflush_r+0x1a>
 800153c:	9b01      	ldr	r3, [sp, #4]
 800153e:	1836      	adds	r6, r6, r0
 8001540:	1a1b      	subs	r3, r3, r0
 8001542:	9301      	str	r3, [sp, #4]
 8001544:	e7e7      	b.n	8001516 <__sflush_r+0xde>
 8001546:	46c0      	nop			; (mov r8, r8)
 8001548:	dfbffffe 	.word	0xdfbffffe

0800154c <_fflush_r>:
 800154c:	690b      	ldr	r3, [r1, #16]
 800154e:	b570      	push	{r4, r5, r6, lr}
 8001550:	0005      	movs	r5, r0
 8001552:	000c      	movs	r4, r1
 8001554:	2b00      	cmp	r3, #0
 8001556:	d102      	bne.n	800155e <_fflush_r+0x12>
 8001558:	2500      	movs	r5, #0
 800155a:	0028      	movs	r0, r5
 800155c:	bd70      	pop	{r4, r5, r6, pc}
 800155e:	2800      	cmp	r0, #0
 8001560:	d004      	beq.n	800156c <_fflush_r+0x20>
 8001562:	6a03      	ldr	r3, [r0, #32]
 8001564:	2b00      	cmp	r3, #0
 8001566:	d101      	bne.n	800156c <_fflush_r+0x20>
 8001568:	f7ff fa5e 	bl	8000a28 <__sinit>
 800156c:	220c      	movs	r2, #12
 800156e:	5ea3      	ldrsh	r3, [r4, r2]
 8001570:	2b00      	cmp	r3, #0
 8001572:	d0f1      	beq.n	8001558 <_fflush_r+0xc>
 8001574:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8001576:	07d2      	lsls	r2, r2, #31
 8001578:	d404      	bmi.n	8001584 <_fflush_r+0x38>
 800157a:	059b      	lsls	r3, r3, #22
 800157c:	d402      	bmi.n	8001584 <_fflush_r+0x38>
 800157e:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8001580:	f7ff fb6d 	bl	8000c5e <__retarget_lock_acquire_recursive>
 8001584:	0028      	movs	r0, r5
 8001586:	0021      	movs	r1, r4
 8001588:	f7ff ff56 	bl	8001438 <__sflush_r>
 800158c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800158e:	0005      	movs	r5, r0
 8001590:	07db      	lsls	r3, r3, #31
 8001592:	d4e2      	bmi.n	800155a <_fflush_r+0xe>
 8001594:	89a3      	ldrh	r3, [r4, #12]
 8001596:	059b      	lsls	r3, r3, #22
 8001598:	d4df      	bmi.n	800155a <_fflush_r+0xe>
 800159a:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800159c:	f7ff fb60 	bl	8000c60 <__retarget_lock_release_recursive>
 80015a0:	e7db      	b.n	800155a <_fflush_r+0xe>
	...

080015a4 <fiprintf>:
 80015a4:	b40e      	push	{r1, r2, r3}
 80015a6:	b517      	push	{r0, r1, r2, r4, lr}
 80015a8:	4c05      	ldr	r4, [pc, #20]	; (80015c0 <fiprintf+0x1c>)
 80015aa:	ab05      	add	r3, sp, #20
 80015ac:	cb04      	ldmia	r3!, {r2}
 80015ae:	0001      	movs	r1, r0
 80015b0:	6820      	ldr	r0, [r4, #0]
 80015b2:	9301      	str	r3, [sp, #4]
 80015b4:	f7ff fca4 	bl	8000f00 <_vfiprintf_r>
 80015b8:	bc1e      	pop	{r1, r2, r3, r4}
 80015ba:	bc08      	pop	{r3}
 80015bc:	b003      	add	sp, #12
 80015be:	4718      	bx	r3
 80015c0:	200000a0 	.word	0x200000a0

080015c4 <_putc_r>:
 80015c4:	b570      	push	{r4, r5, r6, lr}
 80015c6:	0006      	movs	r6, r0
 80015c8:	000d      	movs	r5, r1
 80015ca:	0014      	movs	r4, r2
 80015cc:	2800      	cmp	r0, #0
 80015ce:	d004      	beq.n	80015da <_putc_r+0x16>
 80015d0:	6a03      	ldr	r3, [r0, #32]
 80015d2:	2b00      	cmp	r3, #0
 80015d4:	d101      	bne.n	80015da <_putc_r+0x16>
 80015d6:	f7ff fa27 	bl	8000a28 <__sinit>
 80015da:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80015dc:	07db      	lsls	r3, r3, #31
 80015de:	d405      	bmi.n	80015ec <_putc_r+0x28>
 80015e0:	89a3      	ldrh	r3, [r4, #12]
 80015e2:	059b      	lsls	r3, r3, #22
 80015e4:	d402      	bmi.n	80015ec <_putc_r+0x28>
 80015e6:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80015e8:	f7ff fb39 	bl	8000c5e <__retarget_lock_acquire_recursive>
 80015ec:	68a3      	ldr	r3, [r4, #8]
 80015ee:	3b01      	subs	r3, #1
 80015f0:	60a3      	str	r3, [r4, #8]
 80015f2:	2b00      	cmp	r3, #0
 80015f4:	da05      	bge.n	8001602 <_putc_r+0x3e>
 80015f6:	69a2      	ldr	r2, [r4, #24]
 80015f8:	4293      	cmp	r3, r2
 80015fa:	db12      	blt.n	8001622 <_putc_r+0x5e>
 80015fc:	b2eb      	uxtb	r3, r5
 80015fe:	2b0a      	cmp	r3, #10
 8001600:	d00f      	beq.n	8001622 <_putc_r+0x5e>
 8001602:	6823      	ldr	r3, [r4, #0]
 8001604:	1c5a      	adds	r2, r3, #1
 8001606:	6022      	str	r2, [r4, #0]
 8001608:	701d      	strb	r5, [r3, #0]
 800160a:	b2ed      	uxtb	r5, r5
 800160c:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800160e:	07db      	lsls	r3, r3, #31
 8001610:	d405      	bmi.n	800161e <_putc_r+0x5a>
 8001612:	89a3      	ldrh	r3, [r4, #12]
 8001614:	059b      	lsls	r3, r3, #22
 8001616:	d402      	bmi.n	800161e <_putc_r+0x5a>
 8001618:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800161a:	f7ff fb21 	bl	8000c60 <__retarget_lock_release_recursive>
 800161e:	0028      	movs	r0, r5
 8001620:	bd70      	pop	{r4, r5, r6, pc}
 8001622:	0029      	movs	r1, r5
 8001624:	0022      	movs	r2, r4
 8001626:	0030      	movs	r0, r6
 8001628:	f000 f802 	bl	8001630 <__swbuf_r>
 800162c:	0005      	movs	r5, r0
 800162e:	e7ed      	b.n	800160c <_putc_r+0x48>

08001630 <__swbuf_r>:
 8001630:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001632:	0006      	movs	r6, r0
 8001634:	000d      	movs	r5, r1
 8001636:	0014      	movs	r4, r2
 8001638:	2800      	cmp	r0, #0
 800163a:	d004      	beq.n	8001646 <__swbuf_r+0x16>
 800163c:	6a03      	ldr	r3, [r0, #32]
 800163e:	2b00      	cmp	r3, #0
 8001640:	d101      	bne.n	8001646 <__swbuf_r+0x16>
 8001642:	f7ff f9f1 	bl	8000a28 <__sinit>
 8001646:	69a3      	ldr	r3, [r4, #24]
 8001648:	60a3      	str	r3, [r4, #8]
 800164a:	89a3      	ldrh	r3, [r4, #12]
 800164c:	071b      	lsls	r3, r3, #28
 800164e:	d528      	bpl.n	80016a2 <__swbuf_r+0x72>
 8001650:	6923      	ldr	r3, [r4, #16]
 8001652:	2b00      	cmp	r3, #0
 8001654:	d025      	beq.n	80016a2 <__swbuf_r+0x72>
 8001656:	6923      	ldr	r3, [r4, #16]
 8001658:	6820      	ldr	r0, [r4, #0]
 800165a:	b2ef      	uxtb	r7, r5
 800165c:	1ac0      	subs	r0, r0, r3
 800165e:	6963      	ldr	r3, [r4, #20]
 8001660:	b2ed      	uxtb	r5, r5
 8001662:	4283      	cmp	r3, r0
 8001664:	dc05      	bgt.n	8001672 <__swbuf_r+0x42>
 8001666:	0021      	movs	r1, r4
 8001668:	0030      	movs	r0, r6
 800166a:	f7ff ff6f 	bl	800154c <_fflush_r>
 800166e:	2800      	cmp	r0, #0
 8001670:	d11d      	bne.n	80016ae <__swbuf_r+0x7e>
 8001672:	68a3      	ldr	r3, [r4, #8]
 8001674:	3001      	adds	r0, #1
 8001676:	3b01      	subs	r3, #1
 8001678:	60a3      	str	r3, [r4, #8]
 800167a:	6823      	ldr	r3, [r4, #0]
 800167c:	1c5a      	adds	r2, r3, #1
 800167e:	6022      	str	r2, [r4, #0]
 8001680:	701f      	strb	r7, [r3, #0]
 8001682:	6963      	ldr	r3, [r4, #20]
 8001684:	4283      	cmp	r3, r0
 8001686:	d004      	beq.n	8001692 <__swbuf_r+0x62>
 8001688:	89a3      	ldrh	r3, [r4, #12]
 800168a:	07db      	lsls	r3, r3, #31
 800168c:	d507      	bpl.n	800169e <__swbuf_r+0x6e>
 800168e:	2d0a      	cmp	r5, #10
 8001690:	d105      	bne.n	800169e <__swbuf_r+0x6e>
 8001692:	0021      	movs	r1, r4
 8001694:	0030      	movs	r0, r6
 8001696:	f7ff ff59 	bl	800154c <_fflush_r>
 800169a:	2800      	cmp	r0, #0
 800169c:	d107      	bne.n	80016ae <__swbuf_r+0x7e>
 800169e:	0028      	movs	r0, r5
 80016a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80016a2:	0021      	movs	r1, r4
 80016a4:	0030      	movs	r0, r6
 80016a6:	f000 f805 	bl	80016b4 <__swsetup_r>
 80016aa:	2800      	cmp	r0, #0
 80016ac:	d0d3      	beq.n	8001656 <__swbuf_r+0x26>
 80016ae:	2501      	movs	r5, #1
 80016b0:	426d      	negs	r5, r5
 80016b2:	e7f4      	b.n	800169e <__swbuf_r+0x6e>

080016b4 <__swsetup_r>:
 80016b4:	4b30      	ldr	r3, [pc, #192]	; (8001778 <__swsetup_r+0xc4>)
 80016b6:	b570      	push	{r4, r5, r6, lr}
 80016b8:	0005      	movs	r5, r0
 80016ba:	6818      	ldr	r0, [r3, #0]
 80016bc:	000c      	movs	r4, r1
 80016be:	2800      	cmp	r0, #0
 80016c0:	d004      	beq.n	80016cc <__swsetup_r+0x18>
 80016c2:	6a03      	ldr	r3, [r0, #32]
 80016c4:	2b00      	cmp	r3, #0
 80016c6:	d101      	bne.n	80016cc <__swsetup_r+0x18>
 80016c8:	f7ff f9ae 	bl	8000a28 <__sinit>
 80016cc:	230c      	movs	r3, #12
 80016ce:	5ee2      	ldrsh	r2, [r4, r3]
 80016d0:	b293      	uxth	r3, r2
 80016d2:	0711      	lsls	r1, r2, #28
 80016d4:	d423      	bmi.n	800171e <__swsetup_r+0x6a>
 80016d6:	06d9      	lsls	r1, r3, #27
 80016d8:	d407      	bmi.n	80016ea <__swsetup_r+0x36>
 80016da:	2309      	movs	r3, #9
 80016dc:	2001      	movs	r0, #1
 80016de:	602b      	str	r3, [r5, #0]
 80016e0:	3337      	adds	r3, #55	; 0x37
 80016e2:	4313      	orrs	r3, r2
 80016e4:	81a3      	strh	r3, [r4, #12]
 80016e6:	4240      	negs	r0, r0
 80016e8:	bd70      	pop	{r4, r5, r6, pc}
 80016ea:	075b      	lsls	r3, r3, #29
 80016ec:	d513      	bpl.n	8001716 <__swsetup_r+0x62>
 80016ee:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80016f0:	2900      	cmp	r1, #0
 80016f2:	d008      	beq.n	8001706 <__swsetup_r+0x52>
 80016f4:	0023      	movs	r3, r4
 80016f6:	3344      	adds	r3, #68	; 0x44
 80016f8:	4299      	cmp	r1, r3
 80016fa:	d002      	beq.n	8001702 <__swsetup_r+0x4e>
 80016fc:	0028      	movs	r0, r5
 80016fe:	f7ff facf 	bl	8000ca0 <_free_r>
 8001702:	2300      	movs	r3, #0
 8001704:	6363      	str	r3, [r4, #52]	; 0x34
 8001706:	2224      	movs	r2, #36	; 0x24
 8001708:	89a3      	ldrh	r3, [r4, #12]
 800170a:	4393      	bics	r3, r2
 800170c:	81a3      	strh	r3, [r4, #12]
 800170e:	2300      	movs	r3, #0
 8001710:	6063      	str	r3, [r4, #4]
 8001712:	6923      	ldr	r3, [r4, #16]
 8001714:	6023      	str	r3, [r4, #0]
 8001716:	2308      	movs	r3, #8
 8001718:	89a2      	ldrh	r2, [r4, #12]
 800171a:	4313      	orrs	r3, r2
 800171c:	81a3      	strh	r3, [r4, #12]
 800171e:	6923      	ldr	r3, [r4, #16]
 8001720:	2b00      	cmp	r3, #0
 8001722:	d10b      	bne.n	800173c <__swsetup_r+0x88>
 8001724:	21a0      	movs	r1, #160	; 0xa0
 8001726:	2280      	movs	r2, #128	; 0x80
 8001728:	89a3      	ldrh	r3, [r4, #12]
 800172a:	0089      	lsls	r1, r1, #2
 800172c:	0092      	lsls	r2, r2, #2
 800172e:	400b      	ands	r3, r1
 8001730:	4293      	cmp	r3, r2
 8001732:	d003      	beq.n	800173c <__swsetup_r+0x88>
 8001734:	0021      	movs	r1, r4
 8001736:	0028      	movs	r0, r5
 8001738:	f000 f86c 	bl	8001814 <__smakebuf_r>
 800173c:	220c      	movs	r2, #12
 800173e:	5ea3      	ldrsh	r3, [r4, r2]
 8001740:	2001      	movs	r0, #1
 8001742:	001a      	movs	r2, r3
 8001744:	b299      	uxth	r1, r3
 8001746:	4002      	ands	r2, r0
 8001748:	4203      	tst	r3, r0
 800174a:	d00f      	beq.n	800176c <__swsetup_r+0xb8>
 800174c:	2200      	movs	r2, #0
 800174e:	60a2      	str	r2, [r4, #8]
 8001750:	6962      	ldr	r2, [r4, #20]
 8001752:	4252      	negs	r2, r2
 8001754:	61a2      	str	r2, [r4, #24]
 8001756:	2000      	movs	r0, #0
 8001758:	6922      	ldr	r2, [r4, #16]
 800175a:	4282      	cmp	r2, r0
 800175c:	d1c4      	bne.n	80016e8 <__swsetup_r+0x34>
 800175e:	0609      	lsls	r1, r1, #24
 8001760:	d5c2      	bpl.n	80016e8 <__swsetup_r+0x34>
 8001762:	2240      	movs	r2, #64	; 0x40
 8001764:	4313      	orrs	r3, r2
 8001766:	81a3      	strh	r3, [r4, #12]
 8001768:	3801      	subs	r0, #1
 800176a:	e7bd      	b.n	80016e8 <__swsetup_r+0x34>
 800176c:	0788      	lsls	r0, r1, #30
 800176e:	d400      	bmi.n	8001772 <__swsetup_r+0xbe>
 8001770:	6962      	ldr	r2, [r4, #20]
 8001772:	60a2      	str	r2, [r4, #8]
 8001774:	e7ef      	b.n	8001756 <__swsetup_r+0xa2>
 8001776:	46c0      	nop			; (mov r8, r8)
 8001778:	200000a0 	.word	0x200000a0

0800177c <_sbrk_r>:
 800177c:	2300      	movs	r3, #0
 800177e:	b570      	push	{r4, r5, r6, lr}
 8001780:	4d06      	ldr	r5, [pc, #24]	; (800179c <_sbrk_r+0x20>)
 8001782:	0004      	movs	r4, r0
 8001784:	0008      	movs	r0, r1
 8001786:	602b      	str	r3, [r5, #0]
 8001788:	f7ff f820 	bl	80007cc <_sbrk>
 800178c:	1c43      	adds	r3, r0, #1
 800178e:	d103      	bne.n	8001798 <_sbrk_r+0x1c>
 8001790:	682b      	ldr	r3, [r5, #0]
 8001792:	2b00      	cmp	r3, #0
 8001794:	d000      	beq.n	8001798 <_sbrk_r+0x1c>
 8001796:	6023      	str	r3, [r4, #0]
 8001798:	bd70      	pop	{r4, r5, r6, pc}
 800179a:	46c0      	nop			; (mov r8, r8)
 800179c:	20000200 	.word	0x20000200

080017a0 <memchr>:
 80017a0:	b2c9      	uxtb	r1, r1
 80017a2:	1882      	adds	r2, r0, r2
 80017a4:	4290      	cmp	r0, r2
 80017a6:	d101      	bne.n	80017ac <memchr+0xc>
 80017a8:	2000      	movs	r0, #0
 80017aa:	4770      	bx	lr
 80017ac:	7803      	ldrb	r3, [r0, #0]
 80017ae:	428b      	cmp	r3, r1
 80017b0:	d0fb      	beq.n	80017aa <memchr+0xa>
 80017b2:	3001      	adds	r0, #1
 80017b4:	e7f6      	b.n	80017a4 <memchr+0x4>

080017b6 <abort>:
 80017b6:	2006      	movs	r0, #6
 80017b8:	b510      	push	{r4, lr}
 80017ba:	f000 f893 	bl	80018e4 <raise>
 80017be:	2001      	movs	r0, #1
 80017c0:	f7fe ff92 	bl	80006e8 <_exit>

080017c4 <__swhatbuf_r>:
 80017c4:	b570      	push	{r4, r5, r6, lr}
 80017c6:	000e      	movs	r6, r1
 80017c8:	001d      	movs	r5, r3
 80017ca:	230e      	movs	r3, #14
 80017cc:	5ec9      	ldrsh	r1, [r1, r3]
 80017ce:	0014      	movs	r4, r2
 80017d0:	b096      	sub	sp, #88	; 0x58
 80017d2:	2900      	cmp	r1, #0
 80017d4:	da0c      	bge.n	80017f0 <__swhatbuf_r+0x2c>
 80017d6:	89b2      	ldrh	r2, [r6, #12]
 80017d8:	2380      	movs	r3, #128	; 0x80
 80017da:	0011      	movs	r1, r2
 80017dc:	4019      	ands	r1, r3
 80017de:	421a      	tst	r2, r3
 80017e0:	d013      	beq.n	800180a <__swhatbuf_r+0x46>
 80017e2:	2100      	movs	r1, #0
 80017e4:	3b40      	subs	r3, #64	; 0x40
 80017e6:	2000      	movs	r0, #0
 80017e8:	6029      	str	r1, [r5, #0]
 80017ea:	6023      	str	r3, [r4, #0]
 80017ec:	b016      	add	sp, #88	; 0x58
 80017ee:	bd70      	pop	{r4, r5, r6, pc}
 80017f0:	466a      	mov	r2, sp
 80017f2:	f000 f881 	bl	80018f8 <_fstat_r>
 80017f6:	2800      	cmp	r0, #0
 80017f8:	dbed      	blt.n	80017d6 <__swhatbuf_r+0x12>
 80017fa:	23f0      	movs	r3, #240	; 0xf0
 80017fc:	9901      	ldr	r1, [sp, #4]
 80017fe:	021b      	lsls	r3, r3, #8
 8001800:	4019      	ands	r1, r3
 8001802:	4b03      	ldr	r3, [pc, #12]	; (8001810 <__swhatbuf_r+0x4c>)
 8001804:	18c9      	adds	r1, r1, r3
 8001806:	424b      	negs	r3, r1
 8001808:	4159      	adcs	r1, r3
 800180a:	2380      	movs	r3, #128	; 0x80
 800180c:	00db      	lsls	r3, r3, #3
 800180e:	e7ea      	b.n	80017e6 <__swhatbuf_r+0x22>
 8001810:	ffffe000 	.word	0xffffe000

08001814 <__smakebuf_r>:
 8001814:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8001816:	2602      	movs	r6, #2
 8001818:	898b      	ldrh	r3, [r1, #12]
 800181a:	0005      	movs	r5, r0
 800181c:	000c      	movs	r4, r1
 800181e:	4233      	tst	r3, r6
 8001820:	d006      	beq.n	8001830 <__smakebuf_r+0x1c>
 8001822:	0023      	movs	r3, r4
 8001824:	3347      	adds	r3, #71	; 0x47
 8001826:	6023      	str	r3, [r4, #0]
 8001828:	6123      	str	r3, [r4, #16]
 800182a:	2301      	movs	r3, #1
 800182c:	6163      	str	r3, [r4, #20]
 800182e:	bdf7      	pop	{r0, r1, r2, r4, r5, r6, r7, pc}
 8001830:	466a      	mov	r2, sp
 8001832:	ab01      	add	r3, sp, #4
 8001834:	f7ff ffc6 	bl	80017c4 <__swhatbuf_r>
 8001838:	9900      	ldr	r1, [sp, #0]
 800183a:	0007      	movs	r7, r0
 800183c:	0028      	movs	r0, r5
 800183e:	f7ff faa5 	bl	8000d8c <_malloc_r>
 8001842:	2800      	cmp	r0, #0
 8001844:	d108      	bne.n	8001858 <__smakebuf_r+0x44>
 8001846:	220c      	movs	r2, #12
 8001848:	5ea3      	ldrsh	r3, [r4, r2]
 800184a:	059a      	lsls	r2, r3, #22
 800184c:	d4ef      	bmi.n	800182e <__smakebuf_r+0x1a>
 800184e:	2203      	movs	r2, #3
 8001850:	4393      	bics	r3, r2
 8001852:	431e      	orrs	r6, r3
 8001854:	81a6      	strh	r6, [r4, #12]
 8001856:	e7e4      	b.n	8001822 <__smakebuf_r+0xe>
 8001858:	2380      	movs	r3, #128	; 0x80
 800185a:	89a2      	ldrh	r2, [r4, #12]
 800185c:	6020      	str	r0, [r4, #0]
 800185e:	4313      	orrs	r3, r2
 8001860:	81a3      	strh	r3, [r4, #12]
 8001862:	9b00      	ldr	r3, [sp, #0]
 8001864:	6120      	str	r0, [r4, #16]
 8001866:	6163      	str	r3, [r4, #20]
 8001868:	9b01      	ldr	r3, [sp, #4]
 800186a:	2b00      	cmp	r3, #0
 800186c:	d00c      	beq.n	8001888 <__smakebuf_r+0x74>
 800186e:	0028      	movs	r0, r5
 8001870:	230e      	movs	r3, #14
 8001872:	5ee1      	ldrsh	r1, [r4, r3]
 8001874:	f000 f852 	bl	800191c <_isatty_r>
 8001878:	2800      	cmp	r0, #0
 800187a:	d005      	beq.n	8001888 <__smakebuf_r+0x74>
 800187c:	2303      	movs	r3, #3
 800187e:	89a2      	ldrh	r2, [r4, #12]
 8001880:	439a      	bics	r2, r3
 8001882:	3b02      	subs	r3, #2
 8001884:	4313      	orrs	r3, r2
 8001886:	81a3      	strh	r3, [r4, #12]
 8001888:	89a3      	ldrh	r3, [r4, #12]
 800188a:	433b      	orrs	r3, r7
 800188c:	81a3      	strh	r3, [r4, #12]
 800188e:	e7ce      	b.n	800182e <__smakebuf_r+0x1a>

08001890 <_raise_r>:
 8001890:	b570      	push	{r4, r5, r6, lr}
 8001892:	0004      	movs	r4, r0
 8001894:	000d      	movs	r5, r1
 8001896:	291f      	cmp	r1, #31
 8001898:	d904      	bls.n	80018a4 <_raise_r+0x14>
 800189a:	2316      	movs	r3, #22
 800189c:	6003      	str	r3, [r0, #0]
 800189e:	2001      	movs	r0, #1
 80018a0:	4240      	negs	r0, r0
 80018a2:	bd70      	pop	{r4, r5, r6, pc}
 80018a4:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
 80018a6:	2b00      	cmp	r3, #0
 80018a8:	d004      	beq.n	80018b4 <_raise_r+0x24>
 80018aa:	008a      	lsls	r2, r1, #2
 80018ac:	189b      	adds	r3, r3, r2
 80018ae:	681a      	ldr	r2, [r3, #0]
 80018b0:	2a00      	cmp	r2, #0
 80018b2:	d108      	bne.n	80018c6 <_raise_r+0x36>
 80018b4:	0020      	movs	r0, r4
 80018b6:	f000 f855 	bl	8001964 <_getpid_r>
 80018ba:	002a      	movs	r2, r5
 80018bc:	0001      	movs	r1, r0
 80018be:	0020      	movs	r0, r4
 80018c0:	f000 f83e 	bl	8001940 <_kill_r>
 80018c4:	e7ed      	b.n	80018a2 <_raise_r+0x12>
 80018c6:	2000      	movs	r0, #0
 80018c8:	2a01      	cmp	r2, #1
 80018ca:	d0ea      	beq.n	80018a2 <_raise_r+0x12>
 80018cc:	1c51      	adds	r1, r2, #1
 80018ce:	d103      	bne.n	80018d8 <_raise_r+0x48>
 80018d0:	2316      	movs	r3, #22
 80018d2:	3001      	adds	r0, #1
 80018d4:	6023      	str	r3, [r4, #0]
 80018d6:	e7e4      	b.n	80018a2 <_raise_r+0x12>
 80018d8:	2400      	movs	r4, #0
 80018da:	0028      	movs	r0, r5
 80018dc:	601c      	str	r4, [r3, #0]
 80018de:	4790      	blx	r2
 80018e0:	0020      	movs	r0, r4
 80018e2:	e7de      	b.n	80018a2 <_raise_r+0x12>

080018e4 <raise>:
 80018e4:	b510      	push	{r4, lr}
 80018e6:	4b03      	ldr	r3, [pc, #12]	; (80018f4 <raise+0x10>)
 80018e8:	0001      	movs	r1, r0
 80018ea:	6818      	ldr	r0, [r3, #0]
 80018ec:	f7ff ffd0 	bl	8001890 <_raise_r>
 80018f0:	bd10      	pop	{r4, pc}
 80018f2:	46c0      	nop			; (mov r8, r8)
 80018f4:	200000a0 	.word	0x200000a0

080018f8 <_fstat_r>:
 80018f8:	2300      	movs	r3, #0
 80018fa:	b570      	push	{r4, r5, r6, lr}
 80018fc:	4d06      	ldr	r5, [pc, #24]	; (8001918 <_fstat_r+0x20>)
 80018fe:	0004      	movs	r4, r0
 8001900:	0008      	movs	r0, r1
 8001902:	0011      	movs	r1, r2
 8001904:	602b      	str	r3, [r5, #0]
 8001906:	f7fe ff3e 	bl	8000786 <_fstat>
 800190a:	1c43      	adds	r3, r0, #1
 800190c:	d103      	bne.n	8001916 <_fstat_r+0x1e>
 800190e:	682b      	ldr	r3, [r5, #0]
 8001910:	2b00      	cmp	r3, #0
 8001912:	d000      	beq.n	8001916 <_fstat_r+0x1e>
 8001914:	6023      	str	r3, [r4, #0]
 8001916:	bd70      	pop	{r4, r5, r6, pc}
 8001918:	20000200 	.word	0x20000200

0800191c <_isatty_r>:
 800191c:	2300      	movs	r3, #0
 800191e:	b570      	push	{r4, r5, r6, lr}
 8001920:	4d06      	ldr	r5, [pc, #24]	; (800193c <_isatty_r+0x20>)
 8001922:	0004      	movs	r4, r0
 8001924:	0008      	movs	r0, r1
 8001926:	602b      	str	r3, [r5, #0]
 8001928:	f7fe ff3b 	bl	80007a2 <_isatty>
 800192c:	1c43      	adds	r3, r0, #1
 800192e:	d103      	bne.n	8001938 <_isatty_r+0x1c>
 8001930:	682b      	ldr	r3, [r5, #0]
 8001932:	2b00      	cmp	r3, #0
 8001934:	d000      	beq.n	8001938 <_isatty_r+0x1c>
 8001936:	6023      	str	r3, [r4, #0]
 8001938:	bd70      	pop	{r4, r5, r6, pc}
 800193a:	46c0      	nop			; (mov r8, r8)
 800193c:	20000200 	.word	0x20000200

08001940 <_kill_r>:
 8001940:	2300      	movs	r3, #0
 8001942:	b570      	push	{r4, r5, r6, lr}
 8001944:	4d06      	ldr	r5, [pc, #24]	; (8001960 <_kill_r+0x20>)
 8001946:	0004      	movs	r4, r0
 8001948:	0008      	movs	r0, r1
 800194a:	0011      	movs	r1, r2
 800194c:	602b      	str	r3, [r5, #0]
 800194e:	f7fe febb 	bl	80006c8 <_kill>
 8001952:	1c43      	adds	r3, r0, #1
 8001954:	d103      	bne.n	800195e <_kill_r+0x1e>
 8001956:	682b      	ldr	r3, [r5, #0]
 8001958:	2b00      	cmp	r3, #0
 800195a:	d000      	beq.n	800195e <_kill_r+0x1e>
 800195c:	6023      	str	r3, [r4, #0]
 800195e:	bd70      	pop	{r4, r5, r6, pc}
 8001960:	20000200 	.word	0x20000200

08001964 <_getpid_r>:
 8001964:	b510      	push	{r4, lr}
 8001966:	f7fe fea9 	bl	80006bc <_getpid>
 800196a:	bd10      	pop	{r4, pc}

0800196c <_init>:
 800196c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800196e:	46c0      	nop			; (mov r8, r8)
 8001970:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001972:	bc08      	pop	{r3}
 8001974:	469e      	mov	lr, r3
 8001976:	4770      	bx	lr

08001978 <_fini>:
 8001978:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800197a:	46c0      	nop			; (mov r8, r8)
 800197c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800197e:	bc08      	pop	{r3}
 8001980:	469e      	mov	lr, r3
 8001982:	4770      	bx	lr
