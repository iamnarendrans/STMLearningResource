
001PeriClockEnable.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000130  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080001f0  080001f8  000101f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080001f0  080001f0  000101f8  2**0
                  CONTENTS
  4 .ARM          00000000  080001f0  080001f0  000101f8  2**0
                  CONTENTS
  5 .preinit_array 00000000  080001f0  080001f8  000101f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080001f0  080001f0  000101f0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080001f4  080001f4  000101f4  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  000101f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  080001f8  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  080001f8  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000101f8  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00010220  2**0
                  CONTENTS, READONLY
 13 .debug_info   000000e7  00000000  00000000  00010263  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000086  00000000  00000000  0001034a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000048  00000000  00000000  000103d0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000002c  00000000  00000000  00010418  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000f5e  00000000  00000000  00010444  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   0000048a  00000000  00000000  000113a2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00003bd7  00000000  00000000  0001182c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  0000005c  00000000  00000000  00015404  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000071  00000000  00000000  00015460  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000000 	.word	0x20000000
 80000e0:	00000000 	.word	0x00000000
 80000e4:	080001d8 	.word	0x080001d8

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000004 	.word	0x20000004
 8000104:	080001d8 	.word	0x080001d8

08000108 <main>:
#define RCC_APB2_ENR_OFFSET		0x18UL

#define RCC_APB2_ENR_ADDR		(RCC_BASE_ADDR + RCC_APB2_ENR_OFFSET)

int main(void)
{
 8000108:	b580      	push	{r7, lr}
 800010a:	b082      	sub	sp, #8
 800010c:	af00      	add	r7, sp, #0

	uint32_t *pAddrCrReg = (uint32_t*)ADC_CR_REG_ADDR;
 800010e:	4b09      	ldr	r3, [pc, #36]	; (8000134 <main+0x2c>)
 8000110:	607b      	str	r3, [r7, #4]
	uint32_t *pRccApb2Enr = (uint32_t*)RCC_APB2_ENR_ADDR;
 8000112:	4b09      	ldr	r3, [pc, #36]	; (8000138 <main+0x30>)
 8000114:	603b      	str	r3, [r7, #0]

	// 1. Enable the peripheral clock for ADC
	*pRccApb2Enr |= (1 << 9);
 8000116:	683b      	ldr	r3, [r7, #0]
 8000118:	681b      	ldr	r3, [r3, #0]
 800011a:	2280      	movs	r2, #128	; 0x80
 800011c:	0092      	lsls	r2, r2, #2
 800011e:	431a      	orrs	r2, r3
 8000120:	683b      	ldr	r3, [r7, #0]
 8000122:	601a      	str	r2, [r3, #0]

	// 2. Modify the ACR CR register
	*pAddrCrReg |= (1 << 0);
 8000124:	687b      	ldr	r3, [r7, #4]
 8000126:	681b      	ldr	r3, [r3, #0]
 8000128:	2201      	movs	r2, #1
 800012a:	431a      	orrs	r2, r3
 800012c:	687b      	ldr	r3, [r7, #4]
 800012e:	601a      	str	r2, [r3, #0]




	for(;;);
 8000130:	e7fe      	b.n	8000130 <main+0x28>
 8000132:	46c0      	nop			; (mov r8, r8)
 8000134:	40012408 	.word	0x40012408
 8000138:	40021018 	.word	0x40021018

0800013c <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 800013c:	480d      	ldr	r0, [pc, #52]	; (8000174 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800013e:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000140:	e000      	b.n	8000144 <Reset_Handler+0x8>
 8000142:	bf00      	nop

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000144:	480c      	ldr	r0, [pc, #48]	; (8000178 <LoopForever+0x6>)
  ldr r1, =_edata
 8000146:	490d      	ldr	r1, [pc, #52]	; (800017c <LoopForever+0xa>)
  ldr r2, =_sidata
 8000148:	4a0d      	ldr	r2, [pc, #52]	; (8000180 <LoopForever+0xe>)
  movs r3, #0
 800014a:	2300      	movs	r3, #0
  b LoopCopyDataInit
 800014c:	e002      	b.n	8000154 <LoopCopyDataInit>

0800014e <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800014e:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000150:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000152:	3304      	adds	r3, #4

08000154 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000154:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8000156:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000158:	d3f9      	bcc.n	800014e <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800015a:	4a0a      	ldr	r2, [pc, #40]	; (8000184 <LoopForever+0x12>)
  ldr r4, =_ebss
 800015c:	4c0a      	ldr	r4, [pc, #40]	; (8000188 <LoopForever+0x16>)
  movs r3, #0
 800015e:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000160:	e001      	b.n	8000166 <LoopFillZerobss>

08000162 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000162:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000164:	3204      	adds	r2, #4

08000166 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8000166:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000168:	d3fb      	bcc.n	8000162 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800016a:	f000 f811 	bl	8000190 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800016e:	f7ff ffcb 	bl	8000108 <main>

08000172 <LoopForever>:

LoopForever:
  b LoopForever
 8000172:	e7fe      	b.n	8000172 <LoopForever>
  ldr   r0, =_estack
 8000174:	20004000 	.word	0x20004000
  ldr r0, =_sdata
 8000178:	20000000 	.word	0x20000000
  ldr r1, =_edata
 800017c:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000180:	080001f8 	.word	0x080001f8
  ldr r2, =_sbss
 8000184:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000188:	2000001c 	.word	0x2000001c

0800018c <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 800018c:	e7fe      	b.n	800018c <ADC_IRQHandler>
	...

08000190 <__libc_init_array>:
 8000190:	b570      	push	{r4, r5, r6, lr}
 8000192:	2600      	movs	r6, #0
 8000194:	4c0c      	ldr	r4, [pc, #48]	; (80001c8 <__libc_init_array+0x38>)
 8000196:	4d0d      	ldr	r5, [pc, #52]	; (80001cc <__libc_init_array+0x3c>)
 8000198:	1b64      	subs	r4, r4, r5
 800019a:	10a4      	asrs	r4, r4, #2
 800019c:	42a6      	cmp	r6, r4
 800019e:	d109      	bne.n	80001b4 <__libc_init_array+0x24>
 80001a0:	2600      	movs	r6, #0
 80001a2:	f000 f819 	bl	80001d8 <_init>
 80001a6:	4c0a      	ldr	r4, [pc, #40]	; (80001d0 <__libc_init_array+0x40>)
 80001a8:	4d0a      	ldr	r5, [pc, #40]	; (80001d4 <__libc_init_array+0x44>)
 80001aa:	1b64      	subs	r4, r4, r5
 80001ac:	10a4      	asrs	r4, r4, #2
 80001ae:	42a6      	cmp	r6, r4
 80001b0:	d105      	bne.n	80001be <__libc_init_array+0x2e>
 80001b2:	bd70      	pop	{r4, r5, r6, pc}
 80001b4:	00b3      	lsls	r3, r6, #2
 80001b6:	58eb      	ldr	r3, [r5, r3]
 80001b8:	4798      	blx	r3
 80001ba:	3601      	adds	r6, #1
 80001bc:	e7ee      	b.n	800019c <__libc_init_array+0xc>
 80001be:	00b3      	lsls	r3, r6, #2
 80001c0:	58eb      	ldr	r3, [r5, r3]
 80001c2:	4798      	blx	r3
 80001c4:	3601      	adds	r6, #1
 80001c6:	e7f2      	b.n	80001ae <__libc_init_array+0x1e>
 80001c8:	080001f0 	.word	0x080001f0
 80001cc:	080001f0 	.word	0x080001f0
 80001d0:	080001f4 	.word	0x080001f4
 80001d4:	080001f0 	.word	0x080001f0

080001d8 <_init>:
 80001d8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80001da:	46c0      	nop			; (mov r8, r8)
 80001dc:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80001de:	bc08      	pop	{r3}
 80001e0:	469e      	mov	lr, r3
 80001e2:	4770      	bx	lr

080001e4 <_fini>:
 80001e4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80001e6:	46c0      	nop			; (mov r8, r8)
 80001e8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80001ea:	bc08      	pop	{r3}
 80001ec:	469e      	mov	lr, r3
 80001ee:	4770      	bx	lr
